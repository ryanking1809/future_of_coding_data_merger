[
    {
        "client_msg_id": "9453c5cc-efe2-4fc3-b2fa-d636af8798da",
        "type": "message",
        "text": "<@UEQ6M68H0> \"Beads notation form is already within spitting distance of the minimum possible length program\" it is very minimal on a \"relative complexity\" measure, but there is also the \"absolute complexity\" measure, for example, where is \"draw_rect\" defined?",
        "user": "UMVFWPZ36",
        "ts": "1567268387.048700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96a1ef57fee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96a1ef57fee8349bd6f92faf153f9ec3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36"
    },
    {
        "client_msg_id": "e68f4e3f-1e28-4605-a223-e08f397e63bf",
        "type": "message",
        "text": "<@UEQ6M68H0> \" Deep nesting is the enemy of comprehension, as LISP proved 50 years ago.\" this is a really good point and something I have found in practice to be the case. That's why often I'm using more of a flat graph like structure in my Tree Languages and having the compiler or VM reconstruct the tree. However, I think this is because of limited tooling. It would have been impractical to build great tooling for deeply nested trees back in the day. Now with things like iPad pro, VR, AR, fast graphics cards, etc., I think in the next 10 years we might see the environment change to where that is not only a problem but a natural way to do things.",
        "user": "UMVFWPZ36",
        "ts": "1567268538.048900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96a1ef57fee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96a1ef57fee8349bd6f92faf153f9ec3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36"
    },
    {
        "client_msg_id": "85f06583-c80b-4013-9f5f-f3fd18fbe104",
        "type": "message",
        "text": "<@UCUSW7WVD> it does require the Tree Language to know to treat it's child as strings and concatenate its child nodes",
        "user": "UMVFWPZ36",
        "ts": "1567270694.049200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96a1ef57fee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96a1ef57fee8349bd6f92faf153f9ec3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36"
    },
    {
        "client_msg_id": "96f375ba-6171-40fc-8f5c-d80bc2a513d3",
        "type": "message",
        "text": "<@UEQ6M68H0> \"This is why some people are heading towards fill-in-the-blanks type of approaches\" I love this. I'm going to try describing tree languages as \"fill-in-the-blanks\" type of languages and see if that makes more sense to people. Are there examples of this? IIRC I haven't seen this term before (other than \"mad libs\")",
        "user": "UMVFWPZ36",
        "ts": "1567270775.049400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96a1ef57fee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96a1ef57fee8349bd6f92faf153f9ec3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36"
    },
    {
        "client_msg_id": "8784e02b-cacf-4c8a-85c8-2807bebeedbf",
        "type": "message",
        "text": "Is that part of the grammar the site mentions? I'm not clear on that side. And I think showing before and after without describing such a major knob risks overstating your conclusions.",
        "user": "UCUSW7WVD",
        "ts": "1567271008.049600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36"
    },
    {
        "client_msg_id": "4e544701-2d1e-47e7-a29d-eeace288666c",
        "type": "message",
        "text": "the Eve language's early prototypes were clearly inspired by madlibs.  If i recall correctly Jonathan Edwards' subtext prototypes also used that concept, and then there are various shipping products that use the fill-in-the-blanks paradigm to the extent they can. In a way, intellitype suggestions are a kind of fill in the blanks.  Everyone knows that when you take a test, the easiest kind of test is true\/false, followed by multiple choice, then fill in the blanks, then essay is the hardest. Since programming is mostly an essay test, it is the hardest kind of work, and moving it to fill in the blanks is taking it up one level of simplicity. That is unarguable. I haven't seen even a fake screen of an interface that moves i up to the highest two levels. So you ask for a chess program, it asks you a series of yes\/no questions, and bingo you have a program.. ;-&gt;",
        "user": "UEQ6M68H0",
        "ts": "1567278569.049800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1569719643.000000"
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "83535052-5f7d-4dd1-8a5a-84598eefaf16",
        "type": "message",
        "text": "<@UCUSW7WVD> I put some notes of the \"Drawbacks\" in the paper (notably: that Tree Notation is a lower level than something like JSON, and to get those higher level concepts you need to have a Tree Language(s)). I'm not worried about overstaying the conclusions. I still am always on the hunt for flaws, but after over 2 years and feedback from over 1k people without anyone providing a single proof by contradiction, and over 1k weekly users now, I'm slightly more confident in the grandiose claims? I dunno. Regardless, I'm more of an empiricist than a theorist, and think the best arguments in favor of Tree Notation will be killer apps. Which require killer tools. Which requires lots more work. :cry:",
        "user": "UMVFWPZ36",
        "ts": "1567296858.050500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g96a1ef57fee",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/96a1ef57fee8349bd6f92faf153f9ec3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1567179493.037600",
        "parent_user_id": "UMVFWPZ36"
    }
]