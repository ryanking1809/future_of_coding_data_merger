[
    {
        "client_msg_id": "e9af6b4d-348d-42bb-96e6-927e87c0f09d",
        "type": "message",
        "text": "well what's the practical alternative mindset? do we have consensus?",
        "user": "UE6EFEPTQ",
        "ts": "1557387754.232200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "046d2534-a7de-4a61-9f41-cb9d7864d4d5",
        "type": "message",
        "text": "Functional data-flow with a Hindley-Milner type system of course!  :wink:  Guys, guys?  Hey guys, where did you all go?",
        "user": "UA14TGLTC",
        "ts": "1557388327.233400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UJC8ZDSTX",
                    "UAVCC2X70",
                    "UFBQNBYER",
                    "U5TCAFTD3",
                    "U85HCL7JP",
                    "UE6EFEPTQ",
                    "UBUFWBGNN"
                ],
                "count": 7
            }
        ]
    },
    {
        "client_msg_id": "62301b24-998e-45bf-b4dd-3b39821fe843",
        "type": "message",
        "text": "I'm inclined to dump the _mindset_, but not the _ability_ of languages to act in an imperative\/mutable way - an impure language seems necessary to express some useful and fast algorithms, but the default mode of thought should be more functional rather than imperative, message passing + immutable data sharing rather than shared mutable memory.\n\n(But I think currying - saying `(+) 1` instead of `x =&gt; x + 1`  - tends to be confusing and isn't worth the keystrokes it saves. And fundamentally it doesn't match how modern computers work. Arguably Haskell's always-lazy-eval has similar, if lesser, problems.)",
        "user": "UD6EXQVM0",
        "ts": "1557414319.238800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1557425701.000000"
        },
        "thread_ts": "1557414319.238800",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1557590515.329500",
        "reply_users": [
            "U7C7B75R6",
            "UD6EXQVM0",
            "UHWC9PXBL"
        ],
        "replies": [
            {
                "user": "U7C7B75R6",
                "ts": "1557425686.239900"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1557426295.240500"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557427631.240700"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557427759.241000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1557590515.329500"
            }
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "e5851d23-7417-407c-9d7a-4df37d76829e",
        "type": "message",
        "text": "One alternative syntax for currying like work is wildcards:\n? + 1.\n\n\"And fundamentally it doesn't match how modern computers work.\" - Yep and that's why I use only x86 asm.&lt;\/s&gt; :sweat_smile:",
        "user": "U7C7B75R6",
        "ts": "1557425686.239900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "U7C7B75R6",
            "ts": "1557425934.000000"
        },
        "thread_ts": "1557414319.238800",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "150d34ed-48d8-4385-b036-cec6a6c3f2a7",
        "type": "message",
        "text": "I guess that's a joke but to be clear, it's not just x86--I've never heard of a processor or a popular VM that supported currying; functions \/ calling conventions always take argument tuples. It would be convenient to have a shorter lambda syntax like `=&gt; # + 1` or such, but it's syntactic sugar, not currying.",
        "user": "UD6EXQVM0",
        "ts": "1557426295.240500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557414319.238800",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "1dee168d-461d-4bf4-b93f-b5d89a5f9bbe",
        "type": "message",
        "text": "Yea I think fundmental difference between currying and normal lambda is ability not to care about number of parameters. However you get pretty much same effect if you can pass list of values as arguments.\n\nIn any case it's odd to limit your thinking about 'how iron fundamentally works' when topic is how Von Neumann-architecture is dominating.",
        "user": "U7C7B75R6",
        "ts": "1557427631.240700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "U7C7B75R6",
            "ts": "1557427649.000000"
        },
        "thread_ts": "1557414319.238800",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "1f331fcf-bbc6-4225-ac39-e37d679b9ecb",
        "type": "message",
        "text": "And I could imagine that there is VM that support that but if it's not popular so what...",
        "user": "U7C7B75R6",
        "ts": "1557427759.241000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557414319.238800",
        "parent_user_id": "UD6EXQVM0"
    },
    {
        "client_msg_id": "9e8a80b0-74a1-4cb6-8ed5-5ec704c6ee92",
        "type": "message",
        "text": "I think the mindset of \"functional is better than imperative\" has led to great confusion. If you are approaching this from the point of view of mathematical tractability (which I agree with) then they are simply different mathematical structures. It's like saying \"rings are better than groups\".\n\nThere are areas where the sequential, mutational aspects of imperative code are inessential, and using imperative code is inelegant there ... like using too rich a mathematical structure for a proof, rationals where you just need any monoid. The best place for functional code is \"pure computation\" without \"side effects\" like concurrency, I\/O etc.\n\nBut even this terminology gives a weird value judgment, \"pure\" vs \"impure\". And then you have this quest to \"purify\" the impure by simulating I\/O with monads - this doesn't simplify the proofs at all, the putative goal of the exercise. Conal Elliott did a great job parodying this mindset with \"The C language is purely functional\".",
        "user": "UH84GQ3CZ",
        "ts": "1557428080.241200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "590662e8a2ae",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-16\/610501525696_590662e8a2ae7b2c73e9_72.jpg",
            "first_name": "",
            "real_name": "Jason Priestley",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jasonhpriestley",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "reply_count": 10,
        "reply_users_count": 3,
        "latest_reply": "1557500415.323800",
        "reply_users": [
            "UJKC8B0QN",
            "U7C7B75R6",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "UJKC8B0QN",
                "ts": "1557436796.247900"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557437254.248100"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557438792.249100"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557440404.249700"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557440958.251600"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557441885.252700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1557442965.253200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1557443057.253400"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557500088.323600"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557500415.323800"
            }
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70",
                    "UC2A2ARPT",
                    "UA14TGLTC",
                    "UDLFL2HD4"
                ],
                "count": 4
            },
            {
                "name": "thinking_face",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "bf4f94aa-a41e-4451-a81d-69c20fd985d2",
        "type": "message",
        "text": "Crazy guy here to say that everyone is looking in the wrong direction.  Functional, Imperative, Excel spreadsheet-driven, who cares?  Computation is not the frontier anymore.  Most software is now built across networks and collections of computers (UIs\/embedded being the large exceptions).  What do we have to gain by min-maxing programming a single machine? The glacial pace of innovation in this space since ~1990 should be a big wake up sign.  The future is wrangling distributed systems, which is something that single-machine Turing complete languages like to pretend is somebody else's problem.",
        "user": "UJKC8B0QN",
        "ts": "1557434052.245400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJKC8B0QN",
            "ts": "1557434064.000000"
        },
        "thread_ts": "1557434052.245400",
        "reply_count": 30,
        "reply_users_count": 8,
        "latest_reply": "1557909256.422900",
        "reply_users": [
            "UHTPRR5SM",
            "UJKC8B0QN",
            "UCUSW7WVD",
            "U7C7B75R6",
            "UH84GQ3CZ",
            "U8A5MS6R1",
            "UHWC9PXBL",
            "UJFN50C00"
        ],
        "replies": [
            {
                "user": "UHTPRR5SM",
                "ts": "1557434195.245600"
            },
            {
                "user": "UHTPRR5SM",
                "ts": "1557434213.245900"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557434298.246100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557434579.246300"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557434984.246500"
            },
            {
                "user": "U7C7B75R6",
                "ts": "1557435944.246700"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557436098.246900"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557436206.247200"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557436334.247500"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557436432.247700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557437993.248300"
            },
            {
                "user": "UH84GQ3CZ",
                "ts": "1557438609.248700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557438991.249300"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440658.249900"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440723.250100"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440767.250300"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440829.250500"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440888.250700"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440951.251400"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557440971.251900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557441101.252100"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557441357.252400"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557445406.268100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557445904.268400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557506419.325200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1557590876.330300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557767257.338500"
            },
            {
                "user": "UJFN50C00",
                "ts": "1557907520.420700"
            },
            {
                "user": "UJFN50C00",
                "ts": "1557908459.420900"
            },
            {
                "user": "UJFN50C00",
                "ts": "1557909256.422900"
            }
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UH84GQ3CZ",
                    "UA14TGLTC",
                    "UJFN50C00"
                ],
                "count": 4
            },
            {
                "name": "grin",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "thinking_face",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "88f56321-cddd-4070-a924-628afbd0e727",
        "type": "message",
        "text": "you might be interested in this talk about research on distributed programming languages <https:\/\/www.youtube.com\/watch?v=eAcDWcaezXY>",
        "user": "UHTPRR5SM",
        "ts": "1557434195.245600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3672059e546d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-18\/614285184934_3672059e546d2aa66322_72.png",
            "first_name": "Pete",
            "real_name": "Pete Vilter",
            "display_name": "Pete Vilter",
            "team": "T5TCAFTA9",
            "name": "pete.vilter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "What happened to distributed programming languages? by Heather Miller",
                "title_link": "https:\/\/www.youtube.com\/watch?v=eAcDWcaezXY",
                "author_name": "PapersWeLove",
                "author_link": "https:\/\/www.youtube.com\/user\/PapersWeLove",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/eAcDWcaezXY\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: What happened to distributed programming languages? by Heather Miller",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/eAcDWcaezXY?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=eAcDWcaezXY",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=eAcDWcaezXY"
            }
        ],
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "0f2584d6-3359-4be3-86f3-0007e73b2414",
        "type": "message",
        "text": "some people are looking in this direction :stuck_out_tongue:",
        "user": "UHTPRR5SM",
        "ts": "1557434213.245900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3672059e546d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-18\/614285184934_3672059e546d2aa66322_72.png",
            "first_name": "Pete",
            "real_name": "Pete Vilter",
            "display_name": "Pete Vilter",
            "team": "T5TCAFTA9",
            "name": "pete.vilter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "ae6b3e78-014e-4eee-a1a0-204911fd360b",
        "type": "message",
        "text": "Not a critical mass for us to find each other I suppose!  Thanks for the talk; will watch later today.",
        "user": "UJKC8B0QN",
        "ts": "1557434298.246100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "61d58a40-be56-46b2-9a73-952c3d571739",
        "type": "message",
        "text": "I spent time in the past building\/maintaining distributed systems in industry before returning\/retreating to single-core research in my spare time. Reasons I did so:\n\na) There’s value in building distributed systems out of robust parts that do what they say they’ll do.\nb) There’s value in being able to state distributed systems guarantees as tests that can run on a single machine (simulating multiple machines).\nc) There’s value in making it tractable to step through and debug distributed system scenarios simulated on a single box.",
        "user": "UCUSW7WVD",
        "ts": "1557434579.246300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "5dd34290-964a-4c29-85f8-b032c550ccb4",
        "type": "message",
        "text": "I think it's all about what problem you are trying to solve. Different problems may be unrelated. Is biggest problem of our industry UI of computing or hardness of distributed system programming? Other is related how productive one current (significant?) subarea is and other is (mostly?) about how can we empower more people with it. Very different perspectives and I think you cannot say that looking either one you are looking a wrong direction :stuck_out_tongue:",
        "user": "U7C7B75R6",
        "ts": "1557434984.246500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "86d736bf-5a65-4b87-a46d-a0614d07ceb4",
        "type": "message",
        "text": "I am reading that you are kind of claiming that programming for single machine is solved problem (which is indeed subjective thing)?\n\nLet me ask a question:\nIf you would be part group of people who would using single super fast machine with own IO devices but otherwise shared machine. What benefits would be distribution bring?",
        "user": "U7C7B75R6",
        "ts": "1557435944.246700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "37175419-36a3-47cf-a3da-96fced9cbb68",
        "type": "message",
        "text": "Distribution brings availability (redundancy, system health, etc.), and as far as I know, that's really the only benefit over massive single machines.",
        "user": "UJKC8B0QN",
        "ts": "1557436098.246900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJKC8B0QN",
            "ts": "1557436237.000000"
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "e4ed79e2-2e9e-491a-b545-07e7f3355409",
        "type": "message",
        "text": "I do believe we're past a point of diminishing returns on single machine language innovation.  I don't think whatever we do we'll see the same productivity leap as we did from assembly -&gt; LISP\/C, or even C-&gt;Java.  Academics have proven that nothing is \"solved\" :stuck_out_tongue:, but we certainly pass points of diminishing returns.",
        "user": "UJKC8B0QN",
        "ts": "1557436206.247200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "55648538-0466-4b06-af8d-c0f3050d8df7",
        "type": "message",
        "text": "I'm really bringing this up because I think there's thought within communities like this that \"if we just get people to stop using the bad languages and get them to use the good ones we'll be way better off!\" and I just don't think that's true.   I don't think the delta between Java and Haskell is as big as people would think.",
        "user": "UJKC8B0QN",
        "ts": "1557436334.247500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "514075a6-ef07-4f03-bdf5-d346545bfe4b",
        "type": "message",
        "text": "I DO think that the delta between Java and a language that provides developers constructs and language to reason about distributed systems will be huge.",
        "user": "UJKC8B0QN",
        "ts": "1557436432.247700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "4be86e87-0e62-4481-9466-d869f06c7d0f",
        "type": "message",
        "text": "Haskell will save us!  We must purify the heretics!  I never noticed this tone before.\n\nA Haskell programmer is walking down the street and steps in gum.  He looks down and mutters under his breath with disgust \"_mutation!_\".",
        "user": "UJKC8B0QN",
        "ts": "1557436796.247900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "a275c34b-68b2-4641-bfdd-6585b8c38a39",
        "type": "message",
        "text": "I like terms used by Eric Normand: calculations VS actions.\n\nCurrently I like extreme purism most useful as thinking tool. When I have asked to help with some messy code piles with buggy \/ unpredictable behviour, I bite the bullet and describe \/ redesign roughly same system as pure functional style. On that form you can easily spot fundamental errors. After that you can fix them using more or less FPish style.\n\nI have couple of wins where nobody else has been able to make sense about the code (even tough code is written completely by themselves) but I can _systematically_ apply this method and solve problem. So this is my current day job superpower :smiley: (yea yea no silver bullet I know...)",
        "user": "U7C7B75R6",
        "ts": "1557437254.248100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2c3bc0d7-9059-437e-af0f-2165620bc588",
        "type": "message",
        "text": "I agree (and have ranted here before) that changing programming languages doesn’t accomplish much. I think improving single-threaded _runtimes_ does help, and may make seemingly difficult problems in distributed computing more tractable.\n\nToday you often have to communicate criteria like idempotence in comments, and guarantees can be violated from inexperience, etc. Making it easy to test for such guarantees would be helpful. A language that provided such “type checks” would be huge.",
        "user": "UCUSW7WVD",
        "ts": "1557437993.248300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557438089.000000"
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "f18d617c-4b25-4a60-b781-4a4738f14c25",
        "type": "message",
        "text": "I'm in complete agreement. Not only distributed programming, but other \"side effects\" are simply left to be solved \"somehow\" outside the programming environment. Persistence, versioning, authentication, building, I\/O, UI all come to mind - old-school ALGOL is like a paradise compared to the tools we have to use to deal with these \"extra\" concerns, and as a result they take up a disproportionate part of development time",
        "user": "UH84GQ3CZ",
        "ts": "1557438609.248700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "590662e8a2ae",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-16\/610501525696_590662e8a2ae7b2c73e9_72.jpg",
            "first_name": "",
            "real_name": "Jason Priestley",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jasonhpriestley",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "65c69ef6-71a4-4675-adf7-c919b11554d5",
        "type": "message",
        "text": "If I would try to do programming language at some point one idea I would like to try is implicit function parameters and returns. First some definitions:\n\nImplicit parameters example:\n```f1 = a =&gt; a + 1\nf2 = a =&gt; f1(a) * 2\nf2(0) -&gt; 2```\n\nNow let's change implementation of f1:\n```f1 = a, b =&gt; a + b + 1```\n\nf2 wont need to be changed but it now must be called with 2 arguments:\n```f2(0,1) -&gt; 4```\n\nNote that this is essentially pretty much the same as (I don't remember the term):\n```f2 = a, b =&gt; \n    f1 = c =&gt; c + 1\n    f1(a,b) * 2```\n\nDifferences basicly is that f1 is not strictly limited to be used only inside f2.\n\n\n\nImplicit returns example:\n```f1 = a =&gt; (a + 1, 'Called with ' + a)\nf2 = a =&gt; f1(a) * 2\nf2(0) -&gt; (2, 'Called with 0')```\n\nSo f1 is returning \"unhandled data\" (kind of log in this case) which is then passed up.",
        "user": "U7C7B75R6",
        "ts": "1557438792.249100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "c69f47b6-6b36-416a-bf75-8ff0fc11ba85",
        "type": "message",
        "text": "YES! The original comment resonated quite well with me. It's not that I don't prefer certain languages or think they make no difference. But the unquestioned assumption that the way to do large scale computation is to do 'small programs first' individually compiled and then tied together later needs a rethink.",
        "user": "U8A5MS6R1",
        "ts": "1557438991.249300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh Chaturvedi",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "6ab1549c-0dae-46ca-89ec-596d6c1d60fb",
        "type": "message",
        "text": "*Interesting part:*\nIf you just copy paste you Java like code in it's pretty much valid.\nYou are doing imperative logging =&gt; it _return_ logs.\nYou are writing to database =&gt; _return_ new state\/change.\nYou are reading from database =&gt; database must be _passed as parameter_.\nand so on...\n\nAnd how about if you mix database reads and writes? Should writed states be passed to following reads or should all reads just use same passed database state? Excellent question: raise compile error and let programmer to fine tune parameter flow.\n\nIf code is tightly called example by UI events and work done in the middle of the events raise another events this flow may not be obvious. It just means that you most probably didn't have any idea what your code would do. Good news is that fundamental problem is now detected and visible.\n\nSide note: in F# you may not write any types but inferred types will be still shown to you by IDE. In a sameway implicit parameter passing and return values must be shown by tool suitable way.",
        "user": "U7C7B75R6",
        "ts": "1557440404.249700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "cb88832c-3f86-49e3-99aa-09343e009ab8",
        "type": "message",
        "text": "You've all fallen for my trap--now its time to swoop in with the self-promotion!  <https:\/\/strat.world\/> is a language for systems, and has the audacity to not even be Turing complete!",
        "user": "UJKC8B0QN",
        "ts": "1557440658.249900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "b574beb8-37c9-4a71-a536-6df001fc0a11",
        "type": "message",
        "text": "Totally ignoring that previous comment and continuing the discussion, I have this concept of \"Surface area programming\".  Its the code that stiches components together.  My hypothesis is that as components get smaller and more numerous surface area increases exponentially, and we're at a critical point where surface area is dominating the task of building software--something has to give.",
        "user": "UJKC8B0QN",
        "ts": "1557440723.250100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "5f6b2564-dfd4-4b68-94bf-83dc7040dcb6",
        "type": "message",
        "text": "By its nature surface area programming is multi-machine, and our single machine \"computation\" languages can't express these concepts, so we have to build them up by hand.",
        "user": "UJKC8B0QN",
        "ts": "1557440767.250300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "f729abc8-6a8f-4b0f-a286-fc64a14e696a",
        "type": "message",
        "text": "End result: hundreds of lines of yaml, framework code, tooling, etc. to host 10 LOC of business logic in a distributed system",
        "user": "UJKC8B0QN",
        "ts": "1557440829.250500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHTPRR5SM",
                    "UFEQUBNNT",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "d829afe3-8c92-4012-a1d0-419ad61332bf",
        "type": "message",
        "text": "<@UH84GQ3CZ> Surface area code is exactly what you're talking about here",
        "user": "UJKC8B0QN",
        "ts": "1557440888.250700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "0c60e092-1f98-4c78-8fd0-580ad8803ca3",
        "type": "message",
        "text": "<@U8A5MS6R1> How would you start?  With a top-down language and follow up with the nitty-gritty bits?",
        "user": "UJKC8B0QN",
        "ts": "1557440951.251400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "12c079f6-4b91-4f75-a3fb-ad063a3bc8dd",
        "type": "message",
        "text": "Another way to express idea is that side-effects have often dependent from each other and analyzing them functionally could be good tool for that.",
        "user": "U7C7B75R6",
        "ts": "1557440958.251600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "cf2d42c1-0ce0-4533-acef-49360769db15",
        "type": "message",
        "text": "At some point you do have to write your single-machine algorithms",
        "user": "UJKC8B0QN",
        "ts": "1557440971.251900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "adcd0490-f0f4-4505-a30e-ba9d9ecf95c5",
        "type": "message",
        "text": "My hot take: we should be using the same programming language we use for the 10 LoC of business logic to maintain the specifications we currently use hundreds of lines of yaml, framework code, tooling, etc. And it should all be type-checked. And it should all have tests. (Because the 10 LoC have 40 LoC of tests, right? Right?) And you can prototype these in a single-machine language. It’s about choosing the right interfaces for the syscalls by which a computer interacts with its environment (including for bringing up and sending instructions to other computers).\n\nIs that what strat.world does? Or are you assuming a bunch of conventions? In which case the examples I want to see are about how people would go about violating your opinionated conventions.",
        "user": "UCUSW7WVD",
        "ts": "1557441101.252100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557441206.000000"
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "ad636791-ccba-423c-8de2-6a921ca3eeb6",
        "type": "message",
        "text": "<@UCUSW7WVD> there's a lot to unpack there; I'll have to think about it and get back to you",
        "user": "UJKC8B0QN",
        "ts": "1557441357.252400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "68700e23-cec8-4540-ae0b-839edbd4729c",
        "type": "message",
        "text": "Btw I'd like to get feedback as writer if my descriptions are unclear. So if you feel that you didn't understood the point \/ or it was hard read please react with at least :point_up:or something. Be brave :sweat_smile:",
        "user": "U7C7B75R6",
        "ts": "1557441885.252700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "U7C7B75R6",
            "ts": "1557441990.000000"
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "d145dc3f-a628-4451-9347-0c22a0693cb6",
        "type": "message",
        "text": "<@U7C7B75R6> From a skim I did not understand why you believe such a feature would help make programming simpler\/easier in any way. You're saying side-effects should just be expressed as implicit parameters? If so, I don't think that would make programs easier to understand. You'd quickly be passing huge messes of parameters around, and your programs would be fragile because they'd break when the compiler can't figure out how to thread everything together.",
        "user": "UCGAK10LS",
        "ts": "1557442965.253200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "8fd76c02-8bc4-4f3a-b173-97634d30b9a8",
        "type": "message",
        "text": "Some researchers are working on a more principled approach to tagging side-effects in a functional language in the form of \"algebraic effects\". Yet to be determined how that helps reasoning about side-effects.",
        "user": "UCGAK10LS",
        "ts": "1557443057.253400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557428080.241200",
        "parent_user_id": "UH84GQ3CZ"
    },
    {
        "client_msg_id": "4f9b5ea1-120a-40dd-9a74-5492f178eb18",
        "type": "message",
        "text": "It seems like people have constructed some strawmen to attack in response to my post about John Backus. Nobody was suggesting that we should all be using Haskell. The point was to spur thought about our bias towards thinking about programming, particularly in terms of what our forebears and peers have told us is the \"standard\" or \"efficient\" or \"practical\" or even the \"only\" way of doing things (and whether this bias is something worth escaping). Ironically, this has conjured up discussion about the popular (and false) imperative\/FP dichotomy, and the strengths and weaknesses of the two regimes, which is exactly the kind of _mindset-of-our-forebears_ problem that the discussion was supposed to be _about_.",
        "user": "UCGAK10LS",
        "ts": "1557444175.261100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1557444198.000000"
        }
    },
    {
        "client_msg_id": "99cbc9d7-5621-464a-8454-fb8b5bcffee2",
        "type": "message",
        "text": "Charlie mentions that the pace of language innovation has slowed significantly since the 90s. Consider the possibility that this is a side-effect of the popular mindsets that everyone has adopted, rather than the result of us already having found the \"ultimate paradigm\" of expression.",
        "user": "UCGAK10LS",
        "ts": "1557444380.263400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1557480884.000000"
        },
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UFEQUBNNT",
                    "U7C7B75R6",
                    "UAL7940NM",
                    "UJCHWTMH6",
                    "UBUFWBGNN"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "6c5a84d9-b7be-41ba-a73f-b2faa0aab08c",
        "type": "message",
        "text": "Managing networks of communicating devices (i.e. \"distributed systems\") is important, but isn't always a language problem (often it's an infrastructure problem). When it is a language problem, it makes sense to investigate languages (or language features) that make networks easy. That's a separate (and established) line of investigation, and some people might choose to work on that.",
        "user": "UCGAK10LS",
        "ts": "1557444701.267200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f28cf1ec-ab33-40d1-9b51-6e0c02616f23",
        "type": "message",
        "text": "I choose to work on that. :wink:",
        "user": "UE6EFEPTQ",
        "ts": "1557445293.268000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "1c42c712-41e5-4288-b239-93f0912d4a62",
        "type": "message",
        "text": "<@UCUSW7WVD> so what you're saying, if I'm interpreting correctly, is that we should still be programming single-machine, but with more emphasis\/attention to the boundaries of that machine, and how it might interface with other machines, but without bringing in the concept of many machines?  The very strong benefits to staying single-machine are the wealth of theory and tooling (type systems, tests, math) we have for reasoning about computation--we lose much of this when we break the single-machine\/no-network assumption.\n\nStrat starts from the assumption of many machines and works downwards to what implementation makes sense (which may be locating all computation on a single machine or many).  There are \"conventions\" that it uses to fulfill that implementation (ex: uses JSON+HTTP to send messages between machines).   I'm of the opinion that Strat's compiler will trend towards picking better implementations than users could after enough time a la gcc writing better assembly.",
        "user": "UJKC8B0QN",
        "ts": "1557445406.268100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "c238e626-1744-4151-a2c5-16b6be2f75d3",
        "type": "message",
        "text": "I disagree that gcc trying to match hand-crafted assembly has been a net positive for the world. But that’s a lengthy tangent :slightly_smiling_face:\n\nNot sure I follow your rephrasing of my comment, so let me try new words: our distributed systems today are not robust because we can’t easily simulate network partitions, high network latency and other such environmental factors. It’s _possible_ to do so but it’s expensive and tests take forever to run so there’s huge pressure against writing lots of such tests.\n\nWhat I want to see is an OS that allows me to easily write tests simulating multiple computers with various settings for the environment between them. The reason it has to be in the OS is to keep the simulation cost low, and to provide verisimilitude in the simulation. The right way to deal with environmental problems actually depends a lot on how your underlying platform responds to various circumstances. You can’t just live at the app layer.",
        "user": "UCUSW7WVD",
        "ts": "1557445904.268400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557446102.000000"
        },
        "thread_ts": "1557434052.245400",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "8e4940b8-6972-4151-941b-5dd8f9523f85",
        "type": "message",
        "text": "<@UCGAK10LS> Lets say you've got a program that is manipulating data in an array.  If that array exists on your computer in memory, your language can express iterating over that array as a trivial concept (for loops, streams, sequences, take your pick).  What constructs do you have to use if part of that array is in another machine, or in a database, etc?  The language and its view of the world _completely breaks down_.  You now have to spend X LOC writing clunky code that's abstractions over some OS syscalls to get that array close to hand so that the language can resume (and you can't resume unless you can bring the array close to hand!).\n\n\nAs humans we can express \"part of this array is _over there_\", but the languages we use have no concept of \"_over there_\", there is only _here_.   It's not a problem about abstracting over the oddities of networks, though that does play a part, its a problem of expressing _over there_ in a computer language.  This is all a rant to say that I think distributed systems are entirely a language problem :stuck_out_tongue:",
        "user": "UJKC8B0QN",
        "ts": "1557446610.275700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJKC8B0QN",
            "ts": "1557446735.000000"
        },
        "thread_ts": "1557446610.275700",
        "reply_count": 4,
        "reply_users_count": 3,
        "latest_reply": "1557467899.290500",
        "reply_users": [
            "UCUSW7WVD",
            "UJKC8B0QN",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1557446760.275900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557446935.279200"
            },
            {
                "user": "UJKC8B0QN",
                "ts": "1557447183.282600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1557467899.290500"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "6feb8e8f-0901-48e2-8ad8-a00343c3a0b4",
        "type": "message",
        "text": "A lot of Unix’s original success derived from co-evolving the OS syscalls with the language. Abstractions over syscalls don’t have to be clunky.",
        "user": "UCUSW7WVD",
        "ts": "1557446760.275900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557446610.275700",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "4f021a60-9823-47ed-9524-30fa131c4444",
        "type": "message",
        "text": "I’ve written before here about the cognitive bias of thinking of OS’s as clunky and languages as elegant: <https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1556913352015400?thread_ts=1556901860.014800&amp;cid=CCL5VVBAN>. You’re comparing real OS’s with idealized languages.",
        "user": "UCUSW7WVD",
        "ts": "1557446935.279200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557446957.000000"
        },
        "thread_ts": "1557446610.275700",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "29CA8B1B-27D7-4552-B1D5-1B60F23AA2A1",
        "type": "message",
        "text": "You’ve premised your argument on there being a need to manipulate an array that is located (at a user-visible level) over two different physical locations. If you want to argue for the relevance of your conclusion you need to first argue for the relevance of your premise. Why does the user need to be concerned with a data structure that has been split into chunks? Could this concern be relegated to infrastructure? If so, then we don’t have a language problem. The user can simply deal with the array as if it is a single contiguous entity.",
        "user": "UCGAK10LS",
        "ts": "1557447063.282500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447063.282500",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1557449140.289400",
        "reply_users": [
            "UCUSW7WVD",
            "UCGAK10LS",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1557448198.287500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1557448730.288000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557448827.288200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1557448892.288700"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1557449140.289400"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "80885620-6a4a-4fc2-91a8-234d77e9b906",
        "type": "message",
        "text": "Sorry, I was being dramatic; I meant clunky relative to the array.map(...) code you would normally be writing.  The Http\/IPC calls to get data local will always be more complex than array[i+1], which was like, the #1 design priority for C",
        "user": "UJKC8B0QN",
        "ts": "1557447183.282600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557446610.275700",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "5b691775-c5aa-48ae-a9ec-5a39ca8a8e81",
        "type": "message",
        "text": "Yea, I have to agree with you that it's an infrastructure problem first.  I do think that the trajectory of software and hardware is trending away from \"everything happens on one machine\".  There are still plenty of instances of problems that can be solved on a single machine, but steeped in cloud ideology as I am, I think multi-machine computing is here to stay.  Infrastructure may deliver us from the problems of distributed computing, but today most \"back-end web\"* developers are dealing with arrays that have been split into chunks, and will be for the foreseeable future.\n\n*and I don't really know how big this cohort is, or if they've should be driving computing forward anyway!",
        "user": "UJKC8B0QN",
        "ts": "1557447597.287300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g73561dd6586",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/373561dd658617ebf8d413eb95361c0d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Charlie",
            "display_name": "Charlie",
            "team": "T5TCAFTA9",
            "name": "ccg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447597.287300",
        "reply_count": 6,
        "reply_users_count": 2,
        "latest_reply": "1557767637.339200",
        "reply_users": [
            "U8A5MS6R1",
            "UAVCC2X70"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1557508482.325700"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1557680713.334800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1557697434.335700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557767123.338300"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1557767536.338900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1557767637.339200"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "ef6c3341-5af5-4fa1-ada3-21d7c51d9aa1",
        "type": "message",
        "text": "Tersely repeating myself: The main problem isn't imperative programming. The main problem is programmers wanting to \"relegate concerns to infrastructure\".",
        "user": "UCUSW7WVD",
        "ts": "1557448198.287500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447063.282500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "b222f7a3-e1f8-4df5-b705-25957e90a7d8",
        "type": "message",
        "text": "Programmers have been relegating concerns to infrastructure ever since they stopped programming in binary and stopped manually allocating their memory.",
        "user": "UCGAK10LS",
        "ts": "1557448730.288000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "770c193fd379",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-17\/1092364753072_770c193fd379ebbced3f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447063.282500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "6a9a0432-2b6a-4b75-b52e-4b4bde234cac",
        "type": "message",
        "text": "And how's that going?\n\nTNSTAAFL.",
        "user": "UCUSW7WVD",
        "ts": "1557448827.288200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447063.282500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "a63138ec-fde7-473c-9b08-4b1b07caa9dd",
        "type": "message",
        "text": "Your argument also applies to imperative programming, no?\n\nNot sure how I'm being uncivil.",
        "user": "UCUSW7WVD",
        "ts": "1557448892.288700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1557448933.000000"
        },
        "thread_ts": "1557447063.282500",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "058a1301-fadb-4d96-86bd-eec8076eada5",
        "type": "message",
        "text": "Err... I think, first off, that we aren't talking about an array, we're talking about some sort of _list_ - an abstraction that maybe implements the same interface as an array. Second, it's not literally possible to manipulate the array on machine B from machine A... so what is this argument about? About whether programming languages should provide an illusion that multiple machines are one machine? About which entity should provide such an illusion (e.g. programming language vs  library vs something else?)",
        "user": "UD6EXQVM0",
        "ts": "1557449140.289400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447063.282500",
        "parent_user_id": "UCGAK10LS",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4d37ecb8-9e79-41ab-986a-2c44cc08eaf0",
        "type": "message",
        "text": "Actually, the excellent Chapel project at Cray, run by Brad Chamberlain, has solved in a very thorough manner the issue of iterating efficiently across arrays that are distributed. The Chapel language was purpose built to provide big data with a means of conveniently accessing data that is spread across compute clusters. There are many subtleties to this ostensibly simple feature request, and i think you will be impressed with Chapel. It is not a particularly convenient language for writing graphical interactive software, but then what systems optimized for distributed systems are?",
        "user": "UEQ6M68H0",
        "ts": "1557467899.290500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1558843607.000000"
        },
        "thread_ts": "1557446610.275700",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "7e49c84a-bbd0-4741-b302-3c758c0258e9",
        "type": "message",
        "text": "I meant 99% of broadcast media is supported by advertising. Even NPR is doing advertising now, and it used to be a donation only company when i was young, but not enough money in donations to keep going. And even video games below AAA titles often have an advertising component; either you sell an unlock of some feature or you sell eyeball time via advertising. In the case of Red Hat they sell consulting services and a \"pro\" version that has support, which is important to companies. Don't kid yourself, Twitter and Facebook are getting stronger by the second. I don't know what you mean by \"culturally\" dying. Their sales are increasing, company headcounts are going up, and their competitors are weaker. Their growth rates are tapering off, but that is because they have won their market and at this point it is just a matter of pushing out to all the countries and doing the hard work of localizing\/evangelizing in 100 countries. I don't like Facebook's tactics one bit, but along with Uber, ruthlessness has won (again).",
        "user": "UEQ6M68H0",
        "ts": "1557468837.290700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557292732.202600",
        "parent_user_id": "UEQ6M68H0"
    },
    {
        "client_msg_id": "c5e153b1-c630-4543-82ac-f7d9663c53f5",
        "type": "message",
        "text": "I am of the Nintendo school, which tries to sell entertainment in return for a cash price. They use a durable cartridge system, which allows people to gift, trade and sell their used games, which is a great consumer benefit, to be able to transfer their license cleanly without hindrance. Unfortunately there is a communistic attitude among modern consumers, and the market is gradually moving to a subscription model for everything, which i loathe. It isn't clean, doesn't allow third parties to participate, and shortchanges the creators because when you sell things in bulk by the pound, an individual creation is not particularly valued, nor compensated. Due to piracy, the CD business imploded, but the streaming model has been disastrous for the average musician, and i read recently that 60% of all revenue in the music biz is earned by less than 1% of the people, an unheard of concentration of income. People have resuscitated vinyl partly as a reaction to this, trying to recreate the golden years of music in the 1970's. I believe that creative work, regardless of its tangibility, should be compensated, but I am unfortunately in the minority, as there is now a prevailing attitude in software that due to the near zero cost of copying, that everything created in that domain should be free.",
        "user": "UEQ6M68H0",
        "ts": "1557469226.290900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1557469358.000000"
        },
        "thread_ts": "1557292732.202600",
        "parent_user_id": "UEQ6M68H0"
    },
    {
        "client_msg_id": "5849c68e-809c-4602-b0d4-7e132cda50fc",
        "type": "message",
        "text": "Sorry, but Actionscript\/Lingo is the granddaddy of all scripting languages, and goes back to the invention of CDROMs. There is no question that JS copied from AS\/Lingo whatever it was called",
        "user": "UEQ6M68H0",
        "ts": "1557469606.291200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557290857.200100",
        "parent_user_id": "UEQ6M68H0"
    },
    {
        "client_msg_id": "dd1675e3-0d0b-42e7-aa45-12737e3f0a93",
        "type": "message",
        "text": "1985: VideoWorks\n1988: Named Director 1.0\n1993: Macromind Director became Macromedia Director (v 3.1.3)\n1994: Macromedia Director 4 was released (Windows and Mac PowerPC support)\n1995: Macromedia Shockwave Director 4.0.1 was released in January for Windows (Mac support in later release)\n1996: Macromedia Director 5 was released (MOA and Xtras)\n1997: Macromedia Director 6 was released (Shockwave integration, behavior &amp; mp3 support)\n1998: Macromedia Director 6.5 was released (QuickTime 3 support &amp; Xtra integration)\nNovember 16, 1998: Macromedia Director 7 was released (engine rewrite)\n2000: Macromedia Director 8 was released",
        "user": "UEQ6M68H0",
        "ts": "1557469634.291400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557290857.200100",
        "parent_user_id": "UEQ6M68H0"
    },
    {
        "client_msg_id": "c7effc1a-6f0d-49f9-ad36-b191d10d10a6",
        "type": "message",
        "text": "People often think that Javascript is somehow related to Java, but it's code name was \"mocha\" and it was called Livescript in its first version. The string, date, math, ... etc. libraries are nearly identical between JS and AS. I think it was renamed Javascript for marketing reasons, and it worked great, because Java was already popular, and what better way to get your language accepted than to piggyback on the Java name. If Oracle had owned Java back then, i can guarantee you their lawyers would have stomped all over that concept, but back then Sun was promoting Java as a neutral platform, free for all, in a very generous and beneficent manner.",
        "user": "UEQ6M68H0",
        "ts": "1557469838.291600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1557469967.000000"
        },
        "thread_ts": "1557290857.200100",
        "parent_user_id": "UEQ6M68H0"
    }
]