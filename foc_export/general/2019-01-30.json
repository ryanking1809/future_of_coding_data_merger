[
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "I found the talk he references at the end really interesting: <https:\/\/www.youtube.com\/watch?v=K0Tsa3smr1w>",
        "user": "UAL7940NM",
        "ts": "1548841422.738500",
        "thread_ts": "1548823279.730200",
        "root": {
            "client_msg_id": "afbb04bb-62da-4502-88ea-86686f8f7b65",
            "type": "message",
            "text": "This seems like a different approach to VPL, I found the beginning of the talk boring and the presenter might not now enough from Data Flow VPL. But his approach is different to all the VPL's that I have seen. You can start at min. 12 with the following link if you want to avoid the introduction\n<https:\/\/youtu.be\/edQyRJyVsUg?t=716>",
            "user": "U85HCL7JP",
            "ts": "1548823279.730200",
            "team": "T5TCAFTA9",
            "attachments": [
                {
                    "service_name": "YouTube",
                    "service_url": "https:\/\/www.youtube.com\/",
                    "title": "What could a Clojure\/LISP editor be like? - Rakhim Davletkaliyev",
                    "title_link": "https:\/\/youtu.be\/edQyRJyVsUg?t=716",
                    "author_name": "Clojure Helsinki",
                    "author_link": "https:\/\/www.youtube.com\/channel\/UC7GYPoytIg5R56V2Pn-xU9g",
                    "thumb_url": "https:\/\/i.ytimg.com\/vi\/edQyRJyVsUg\/hqdefault.jpg",
                    "thumb_width": 480,
                    "thumb_height": 360,
                    "fallback": "YouTube Video: What could a Clojure\/LISP editor be like? - Rakhim Davletkaliyev",
                    "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/edQyRJyVsUg?start=716&feature=oembed&start=716&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                    "video_html_width": 400,
                    "video_html_height": 225,
                    "from_url": "https:\/\/youtu.be\/edQyRJyVsUg?t=716",
                    "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                    "id": 1,
                    "original_url": "https:\/\/youtu.be\/edQyRJyVsUg?t=716"
                }
            ],
            "thread_ts": "1548823279.730200",
            "reply_count": 54,
            "reply_users_count": 11,
            "latest_reply": "1549574483.942000",
            "reply_users": [
                "UAL7940NM",
                "UC2A2ARPT",
                "U85HCL7JP",
                "UBKNXPBAB",
                "U8A5MS6R1",
                "UEQ6M68H0",
                "UC6997THT",
                "U5STGTB3J",
                "UFD2JRE58",
                "UFW3LB2KA",
                "U85MWBKEY"
            ],
            "subscribed": false
        },
        "client_msg_id": "4602c4ea-d17f-4566-9120-2b6977e26382",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F",
                    "U85HCL7JP",
                    "UBSMEUXAA"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "393d7525-b488-4230-881b-17246a0438fd",
        "type": "message",
        "text": "Katherine (aka hypotext) was on the podcast: <https:\/\/futureofcoding.org\/episodes\/034>",
        "user": "UF5PAGQQ4",
        "ts": "1548841541.738800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g99a3fab7a1a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/299a3fab7a1a2d6644455dedae9fce0a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Stathis Sideris",
            "display_name": "Stathis",
            "team": "T5TCAFTA9",
            "name": "sideris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548833039.738000",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c4d5ca63-fd16-497e-9d02-5e59795c4506",
        "type": "message",
        "text": "this repo by the presenter also looks great",
        "user": "UAL7940NM",
        "ts": "1548841771.739000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "be0afbe4-5b44-424d-bae6-750f94859a93",
        "type": "message",
        "text": "<https:\/\/github.com\/shaunlebron\/history-of-lisp-parens>",
        "user": "UAL7940NM",
        "ts": "1548841773.739200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "9aa43874-4af3-4b23-b524-2261a851dc27",
        "type": "message",
        "text": "Lisp and Autocad, Smalltalk in finance, etc... are definitely interesting examples but I'd debate whether those really qualify as \"advanced tools to achieve more, faster and safer with less resources and then become a success story\". E.g., you could find similar examples for any programming language, even objectively bad ones like AppleScript on macOS.\n\nPersonally I think the reason we don't have examples that qualify is that frameworks\/platforms are far more important to the success of projects than programming languages. With frameworks and platforms you can find examples that unquestionably qualify, my favorite is NeXT. Both the web browser and Doom, two of the most important software applications in history, we're created by tiny teams on a platform with minuscule marketshare (NeXT only shipped about 50,000 workstations).",
        "user": "UE0ETTCG7",
        "ts": "1548865398.739800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2d5718395ee3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-08\/475666469605_2d5718395ee31c13bb5d_72.png",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548692863.694400",
        "parent_user_id": "UAJ9DV971"
    },
    {
        "client_msg_id": "15193364-c719-4649-865f-609262be29cc",
        "type": "message",
        "text": "Yeah, Shaun Lebron is one of my favourite people in the Clojure community. His work on Parinfer is just inspiring.",
        "user": "UC2A2ARPT",
        "ts": "1548871676.740100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "0db38a09-141d-42b2-b79f-a7ea5ebfe784",
        "type": "message",
        "text": "<https:\/\/shaunlebron.github.io\/parinfer\/>",
        "user": "UC2A2ARPT",
        "ts": "1548871698.740300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1548871703.000000"
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "384d9089-1abd-416b-93c7-3781148ed691",
        "type": "message",
        "text": "As for the OP talk about Clojure editors.. there's a moment in the talk where it goes off the rails and folks in the audience start throwing out criticisms of visual languages. One of them that seems really sticky is \"We only have tools for working with text — git, etc\".\n\n• Graphics professionals have version control, diff, and other tools needed to do good source asset management. Some of these tools are awful, but some are downright fantastic.\n\n• There's no reason you couldn't make a visual language that nicely serializes to a git- and diff-friendly text encoding. Max\/MSP and Pure Data are 40% of the way there. Luna is 70% of the way there.\n\n• It's bullshit that \"can't use it with diff\" is a nail in the coffin of visual languages, but \"can't see live state\" isn't a nail in the coffin of text languages. There's such a failure of imagination when it comes to programming tools. Thank goodness we have this community!",
        "user": "UC2A2ARPT",
        "ts": "1548872160.740700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UAVCC2X70"
                ],
                "count": 2
            },
            {
                "name": "100",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "3e1c2bb6-53fc-4f46-90e5-ef95ca9ce102",
        "type": "message",
        "text": "Now watching the Q&amp;A at the end.. folks saying \"Nobody has come up with a way to do recursion \/ iteration\"",
        "user": "UC2A2ARPT",
        "ts": "1548872640.740900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "d32c462a-3be1-4cc6-bf3a-d15d45f971d3",
        "type": "message",
        "text": ":face_palm:",
        "user": "UC2A2ARPT",
        "ts": "1548872699.741100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "68ab49cc-a4d5-48b7-8860-fe00dee418a0",
        "type": "message",
        "text": "I'm glad I watched this talk, in that it gives me all the more resolve to just go build stuff so that when people come up with these basic af criticisms of visual programming, there are more counterexamples, so that the discussion can get past this point and get to more interesting stuff like \"Are there reasons to not treat the evolution of the state space as the time axis?\"",
        "user": "UC2A2ARPT",
        "ts": "1548873085.741300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "reactions": [
            {
                "name": "doughnut",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "a0da1376-1678-44b8-b5bd-23d060193802",
        "type": "message",
        "text": "Yeah I hate the argument: 'We only have tools for working with text'. Fuck it we should NEVER evolve and create new tools, we should stick with the tools that we have forever!",
        "user": "U85HCL7JP",
        "ts": "1548875171.741500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e6db0e9dd5fe",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-15\/956131187863_e6db0e9dd5fe2e3b9df2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1198ef2b-fdb9-4f1c-866a-0a90bc3c0094",
        "type": "message",
        "text": "<@UC2A2ARPT> Do you have concrete examples of vcs \/ diff \/ ... tools used by graphics professionals? I'd be interested to learn about these.",
        "user": "UAL7940NM",
        "ts": "1548919165.742800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP"
    },
    {
        "client_msg_id": "6b8bde20-2823-4c0f-98d3-de752464008f",
        "type": "message",
        "text": "Text as a storage representation is indeed universal in a sense that text-based tools work with all data that's text based. Git works the same whether you work with Python source code, tex-files, or any other text-based data. A universal representation is important because it enables compatibility across tools and also means that users need less tools to achieve their goals. Just imagine you'd have to learn a new version control system and editor each time you start using another programming language.\nOn the other hand, we're often dealing with complex structures that don't map to text well. Programs (in all languages I know) are a nested tree structure and a lot of complexity is caused by having to re-create this structure from primitive text. In VPL, a natural representation would probably be some kind of graph structure and I suspect that encoding this into a textual representation would be possible, but not really usable.\nSo what if we could have a structured (tree\/graph-based) universal representation? People could write general-purpose editors \/ version control systems \/ ... and a lot of issues related to parsing \/ serialisation would become a lot easier since the structure of the domain would map to the storage representation more naturally.\nA lot of people seem to think that there's no alternative to text that's as flexible and universally usable. I instead see a lot of issues with text (parsing, encoding of presentation \/ code style \/ line limits, data types, efficiency, accuracy of diffs, ...) that could possibly be resolved by switching to more expressive hierarchical \/ node-based formats. A \"universal\" format is important, but that doesn't mean that it has to be a primitive stream of characters.\n_Thanks for reading until the end. This topic probably deserves a blog post..._",
        "user": "UAL7940NM",
        "ts": "1548921546.743000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548823279.730200",
        "parent_user_id": "U85HCL7JP",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "doughnut",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    }
]