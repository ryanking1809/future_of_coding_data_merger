[
    {
        "client_msg_id": "a650163a-b6d3-4c43-a3c4-56516dc99c00",
        "type": "message",
        "text": "A blog is what you want to make of it. You can write frequent short posts, or rare long and thoughtful ones. So blogs don't imply oversharing.",
        "user": "UJBAJNFLK",
        "ts": "1587542596.112000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e4cf66ef1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/305e4cf66ef1179f7e95981b1520ba1a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nrkc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A blog is what you want to make of it. You can write frequent short posts, or rare long and thoughtful ones. So blogs don't imply oversharing."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587179790.047300",
        "parent_user_id": "UCGAK10LS"
    },
    {
        "client_msg_id": "8f73bc62-6e82-4f7e-a57f-52a4fe63f8d8",
        "type": "message",
        "text": "Vladimir, LES2 is intended to be used instead of JSON and is backward-compatible with it, although I guess a JSON encoding would be... possible. Now, for LES3 I decided that in order to achieve better cross-language compatibility, it was necessary to not require all implementations to support data types like int64, so I introduced Custom Literals. I think I'll be changing the implementation of this at some point, but conceptually my new approach is that everything is a string, but could, incidentally, also be a number, a Regex, a boolean, or whatever. For example, a literal like `1234f` (single-precision float 1234) would be equivalent to `_f\"1234\"` in LES3 which is a character sequence `['1','2','3','4']` and a type marker `_f`  in which the leading underscore means \"formatted as a number literal, if possible\". So you can treat all literals as pairs of two strings. Related comment on my repo: <https:\/\/github.com\/qwertie\/ecsharp\/issues\/52#issuecomment-331034896>",
        "user": "UD6EXQVM0",
        "ts": "1587557619.112200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1587558511.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z1n65",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Vladimir, LES2 is intended to be used instead of JSON and is backward-compatible with it, although I guess a JSON encoding would be... possible. Now, for LES3 I decided that in order to achieve better cross-language compatibility, it was necessary to not require all implementations to support data types like int64, so I introduced Custom Literals. I think I'll be changing the implementation of this at some point, but conceptually my new approach is that everything is a string, but could, incidentally, also be a number, a Regex, a boolean, or whatever. For example, a literal like "
                            },
                            {
                                "type": "text",
                                "text": "1234f",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (single-precision float 1234) would be equivalent to "
                            },
                            {
                                "type": "text",
                                "text": "_f\"1234\"",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in LES3 which is a character sequence "
                            },
                            {
                                "type": "text",
                                "text": "['1','2','3','4']",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and a type marker "
                            },
                            {
                                "type": "text",
                                "text": "_f",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  in which the leading underscore means \"formatted as a number literal, if possible\". So you can treat all literals as pairs of two strings. Related comment on my repo: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/qwertie\/ecsharp\/issues\/52#issuecomment-331034896"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "3e2aaded-1bc0-4220-b41b-e6fccef7ebde",
        "type": "message",
        "text": "Fun fact, I invented an encoding for binary blobs in JSON, which I called BAIS: <https:\/\/stackoverflow.com\/a\/56712198\/22820>",
        "user": "UD6EXQVM0",
        "ts": "1587558195.112900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1587558200.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BrH0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fun fact, I invented an encoding for binary blobs in JSON, which I called BAIS: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/a\/56712198\/22820"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "parent_user_id": "UCKRZS3DZ"
    },
    {
        "client_msg_id": "3f5de551-f665-4213-8d7c-7bdc38e954c2",
        "type": "message",
        "text": "Zoom links will be posted to the sheet",
        "user": "U6KQ2S410",
        "ts": "1587562228.113400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L+m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Zoom links will be posted to the sheet"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587478348.097300",
        "parent_user_id": "U6KQ2S410"
    },
    {
        "client_msg_id": "891eeab1-c4ae-4cfd-ac28-c511fca550ca",
        "type": "message",
        "text": "Well, I just got laid off, so I hope the current situation will let me pair up with someone here on FoC and do a project!",
        "user": "UD6EXQVM0",
        "ts": "1587570854.113900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tT+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, I just got laid off, so I hope the current situation will let me pair up with someone here on FoC and do a project!"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585583686.028900",
        "parent_user_id": "USEQV4KCH"
    },
    {
        "client_msg_id": "8c2bc666-6fc6-404a-8e13-10b6c251e28d",
        "type": "message",
        "text": "There is also BSON created by MongoDB team. There is also CBOR, which is kinda similar",
        "user": "UCKRZS3DZ",
        "ts": "1587571384.114100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SgibT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is also BSON created by MongoDB team. There is also CBOR, which is kinda similar"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585588913.032700",
        "parent_user_id": "UCKRZS3DZ",
        "reactions": [
            {
                "name": "confused",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "text": "This guy, where just enough extra cells exist for you to add stuff in any direction",
        "files": [
            {
                "id": "F01316M5Y56",
                "created": 1587572259,
                "timestamp": 1587572259,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UFEQUBNNT",
                "editable": false,
                "size": 87507,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01316M5Y56\/image.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F01316M5Y56\/download\/image.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01316M5Y56-1cf76243ca\/image_64.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01316M5Y56-1cf76243ca\/image_80.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01316M5Y56-1cf76243ca\/image_360.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_360_w": 360,
                "thumb_360_h": 310,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01316M5Y56-1cf76243ca\/image_480.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_480_w": 480,
                "thumb_480_h": 413,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-F01316M5Y56-1cf76243ca\/image_160.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "original_w": 538,
                "original_h": 463,
                "thumb_tiny": "AwApADDRA4pcUhOBR\/KgBcUYopaAExSEcU6kPSgBMZoxQDxS5oAWikzRmgBaQ9KM0hPFAEYal3VHRQBJuo3VHRQBJupC3FMooA\/\/2Q==",
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/UFEQUBNNT\/F01316M5Y56\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F01316M5Y56-ac6fb09cdb",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nci0b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This guy, where just enough extra cells exist for you to add stuff in any direction"
                            }
                        ]
                    }
                ]
            }
        ],
        "user": "UFEQUBNNT",
        "display_as_bot": false,
        "ts": "1587572261.114300",
        "client_msg_id": "1c9edb6f-0b0b-4e5f-bd3c-17360263b0d4",
        "thread_ts": "1587409068.093400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "005fb128-0ff9-4030-9065-3433c89fc7fd",
        "type": "message",
        "text": "The analogue of implementing an interface for a struct in Go in order to call a function like sort.Sort would be to project\/join your way to having the right fields for applying another, first class relation. Like a SQL statement with parameters, such as `SELECT a FROM $tbl` .",
        "user": "UFEQUBNNT",
        "ts": "1587572583.114700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GmBG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The analogue of implementing an interface for a struct in Go in order to call a function like sort.Sort would be to project\/join your way to having the right fields for applying another, first class relation. Like a SQL statement with parameters, such as "
                            },
                            {
                                "type": "text",
                                "text": "SELECT a FROM $tbl",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587276251.075500",
        "parent_user_id": "U012FRV0EV7"
    },
    {
        "client_msg_id": "2BEB55BE-934D-471F-9632-E13761670EB6",
        "type": "message",
        "text": "ahh i thought you meant something way more literal by fisheye lol",
        "user": "UHWC9PXBL",
        "ts": "1587578741.115700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Garth Goldwater",
            "display_name": "Garth Goldwater",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QVPu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ahh i thought you meant something way more literal by fisheye lol"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587409068.093400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "D138A942-BE04-47C1-B759-7794DD98AA2C",
        "type": "message",
        "text": "yeah i like their cell structure a lot",
        "user": "UHWC9PXBL",
        "ts": "1587578753.116200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Garth Goldwater",
            "display_name": "Garth Goldwater",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oie",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah i like their cell structure a lot"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587409068.093400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "4D30C164-B7AC-432A-9B1F-0C31646FF045",
        "type": "message",
        "text": "The Googler book on how different engineering is with tens of thousands of developers is apparently out! <https:\/\/twitter.com\/gergelyorosz\/status\/1253051516228952067|https:\/\/twitter.com\/gergelyorosz\/status\/1253051516228952067>",
        "user": "UFEQUBNNT",
        "ts": "1587586029.117700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/GergelyOrosz|@GergelyOrosz>: I'm reading the #flamingoBook, \"Software Engineering at Google\". A good read to see how the dev process evolves with *lots* of devs.\n\nGoogle: 30K devs. 60K+ commits\/day. All languages have strict style guides. Before merging a \"language style guide expert\" also needs to review. <https:\/\/pbs.twimg.com\/media\/EWO7s5CWkAM0CMb.jpg>",
                "ts": 1587585736,
                "author_name": "Gergely Orosz",
                "author_link": "https:\/\/twitter.com\/GergelyOrosz\/status\/1253051516228952067",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/673095429748350976\/ei5eeouV_normal.png",
                "author_subname": "@GergelyOrosz",
                "text": "I'm reading the #flamingoBook, \"Software Engineering at Google\". A good read to see how the dev process evolves with *lots* of devs.\n\nGoogle: 30K devs. 60K+ commits\/day. All languages have strict style guides. Before merging a \"language style guide expert\" also needs to review. <https:\/\/pbs.twimg.com\/media\/EWO7s5CWkAM0CMb.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/gergelyorosz\/status\/1253051516228952067",
                "image_url": "https:\/\/pbs.twimg.com\/media\/EWO7s5CWkAM0CMb.jpg",
                "image_width": 1200,
                "image_height": 671,
                "image_bytes": 58607,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/gergelyorosz\/status\/1253051516228952067",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n9R3D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Googler book on how different engineering is with tens of thousands of developers is apparently out! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/gergelyorosz\/status\/1253051516228952067",
                                "text": "https:\/\/twitter.com\/gergelyorosz\/status\/1253051516228952067"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "reply_count": 31,
        "reply_users_count": 9,
        "latest_reply": "1587680564.152600",
        "reply_users": [
            "UFEQUBNNT",
            "UC2A2ARPT",
            "UE0ETTCG7",
            "UEQ6M68H0",
            "UCUSW7WVD",
            "UKJGU23KP",
            "U79HM6726",
            "UJBAJNFLK",
            "UBSMEUXAA"
        ],
        "replies": [
            {
                "user": "UFEQUBNNT",
                "ts": "1587586063.118500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1587588789.119700"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1587588887.121700"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1587592959.122300"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1587593045.122500"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1587593198.124100"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1587593644.124500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587594076.124700"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1587595417.127200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1587596734.127500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587599984.128000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587600597.128200"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1587605589.128500"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1587607050.139900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587613858.140400"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587614238.140700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1587614379.141000"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1587615630.146000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587625193.146500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587625285.146700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587625310.146900"
            },
            {
                "user": "U79HM6726",
                "ts": "1587634217.147600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1587634501.148000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587671996.151000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587672058.151200"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587672140.151400"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587672188.151600"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587672269.151800"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587672360.152000"
            },
            {
                "user": "UBSMEUXAA",
                "ts": "1587672384.152200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1587680564.152600"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "4F4909FC-00E9-4FBE-92CE-2E66AE23BF3A",
        "type": "message",
        "text": "(I work at Google but I don’t have anything to do with the book.)",
        "user": "UFEQUBNNT",
        "ts": "1587586063.118500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vrwQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I work at Google but I don’t have anything to do with the book.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "C4AF722D-5205-4779-A02F-3CAB0FEB396C",
        "type": "message",
        "text": "Yeah, I guess that was a little too non-literal :sweat_smile:",
        "user": "UFEQUBNNT",
        "ts": "1587586131.119200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LWc5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I guess that was a little too non-literal "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587409068.093400",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "de996a18-94ec-4299-a490-0c760fd90b18",
        "type": "message",
        "text": "Is Google's code still all stored in a giant monorepo?",
        "user": "UC2A2ARPT",
        "ts": "1587588789.119700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+NX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is Google's code still all stored in a giant monorepo?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "68DD837E-01FA-48B6-A2DE-1FB10000C2A9",
        "type": "message",
        "text": "Almost al of it. The open source projects sometimes find other arrangements to better support outside collaboration.",
        "user": "UFEQUBNNT",
        "ts": "1587588887.121700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q+E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Almost al of it. The open source projects sometimes find other arrangements to better support outside collaboration."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "8f33e153-5544-418f-83d0-7ddb6b02aa5a",
        "type": "message",
        "text": "<@UFB8STN7K> I missed your message. We are still documenting GT. Our current focus is to make the environment itself be the description. To this end, we have documents and interactive slideshows inside the environment.",
        "user": "UE1JQM9HQ",
        "ts": "1587588958.121900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rvDR1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " I missed your message. We are still documenting GT. Our current focus is to make the environment itself be the description. To this end, we have documents and interactive slideshows inside the environment."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1585860839.083000",
        "parent_user_id": "UFB8STN7K",
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "958c1a19-606e-41f7-bc67-4c25b635d0ce",
        "type": "message",
        "text": "I came here to ask the same monorepo question. The question I'm always so curious about with monorepos is what you do about your CI? In my personal repos, one of my biggest annoyances is waiting for CI to run, and the main way I keep the CI time as short as possible is modularizing my code into different repos.",
        "user": "UE0ETTCG7",
        "ts": "1587592959.122300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2d5718395ee3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-08\/475666469605_2d5718395ee31c13bb5d_72.png",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VS1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I came here to ask the same monorepo question. The question I'm always so curious about with monorepos is what you do about your CI? In my personal repos, one of my biggest annoyances is waiting for CI to run, and the main way I keep the CI time as short as possible is modularizing my code into different repos."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "7802c940-70de-4669-97cb-e5bdc8afbbef",
        "type": "message",
        "text": "I'm guessing they probably use heuristics to determine which parts have to be rebuilt? But I'm surprised there's not more discussion of how that technique works. In my opinion *no one* should be using a monorepo without a solution to that problem.",
        "user": "UE0ETTCG7",
        "ts": "1587593045.122500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2d5718395ee3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-08\/475666469605_2d5718395ee31c13bb5d_72.png",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sDG\/n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm guessing they probably use heuristics to determine which parts have to be rebuilt? But I'm surprised there's not more discussion of how that technique works. In my opinion "
                            },
                            {
                                "type": "text",
                                "text": "no one",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " should be using a monorepo without a solution to that problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "9705466F-031D-40A7-8EBD-AD46136F8BDB",
        "type": "message",
        "text": "I’m not too eager to go on the Permanent Record about corp internals, so I will just point at the book again and hope it answers that question. :sweat_smile:",
        "user": "UFEQUBNNT",
        "ts": "1587593198.124100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WJa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m not too eager to go on the Permanent Record about corp internals, so I will just point at the book again and hope it answers that question. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UE0ETTCG7",
                    "UCKRZS3DZ",
                    "UBSMEUXAA",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "df608a43-88e4-4279-86de-1dddbc6588b4",
        "type": "message",
        "text": "Fair :slightly_smiling_face:",
        "user": "UE0ETTCG7",
        "ts": "1587593644.124500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2d5718395ee3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-08\/475666469605_2d5718395ee31c13bb5d_72.png",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HaZU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fair "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "d9e8960b-5c4b-4485-8c8c-334432ab2a4a",
        "type": "message",
        "text": "There is no better evidence for the \"system is broken\" assertion, than the gigantosaur that is the google central code base, which is so large they don't even want to admit how big it is, because it shows that massive code duplication is going on.  It was 2 billion lines in 2015, and probably over 10 billion lines now. Clearly it is easier for the engineers to reinvent the wheel than search through the giant pile of stuff they have. We have yet to enter the era of interchangeable parts, and that will be a revolution.",
        "user": "UEQ6M68H0",
        "ts": "1587594076.124700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1587594086.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s87y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There is no better evidence for the \"system is broken\" assertion, than the gigantosaur that is the google central code base, which is so large they don't even want to admit how big it is, because it shows that massive code duplication is going on.  It was 2 billion lines in 2015, and probably over 10 billion lines now. Clearly it is easier for the engineers to reinvent the wheel than search through the giant pile of stuff they have. We have yet to enter the era of interchangeable parts, and that will be a revolution."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UP6B3FCGZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "F54E9F26-7AAD-4929-9013-22C6CCC79D5C",
        "type": "message",
        "text": "I think it’d be more accurate to say it’s easier to reinvent and\/or copy a wheel than to repurpose one.",
        "user": "UFEQUBNNT",
        "ts": "1587595417.127200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1587595477.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lrvt3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it’d be more accurate to say it’s easier to reinvent and\/or copy a wheel than to repurpose one."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "d6cab1db-0192-4a00-8ecd-9f1419f03c91",
        "type": "message",
        "text": "<@UE0ETTCG7> your CI question should be answered by <https:\/\/bazel.build|https:\/\/bazel.build>. The unit of integration doesn't really have to be a repo.",
        "user": "UCUSW7WVD",
        "ts": "1587596734.127500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Bazel - a fast, scalable, multi-language and extensible build system",
                "title_link": "https:\/\/bazel.build\/",
                "fallback": "Bazel - a fast, scalable, multi-language and extensible build system",
                "image_url": "https:\/\/bazel.build\/images\/bazel-og-image.png",
                "from_url": "https:\/\/bazel.build\/",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 15253,
                "service_icon": "https:\/\/bazel.build\/images\/favicon-32x32.png",
                "service_name": "bazel.build",
                "id": 1,
                "original_url": "https:\/\/bazel.build"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "37QV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " your CI question should be answered by "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bazel.build",
                                "text": "https:\/\/bazel.build"
                            },
                            {
                                "type": "text",
                                "text": ". The unit of integration doesn't really have to be a repo."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "2af83e2f-356e-499f-9264-dea9f6a01258",
        "type": "message",
        "text": "<@UFEQUBNNT> you bet, i would wager there is tons of copy\/paste going on inside that monstrous pile of code. Contrast that with a set of well tested, documented components that do one small thing well. Lego vs. the library of congress.",
        "user": "UEQ6M68H0",
        "ts": "1587599984.128000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JWi7=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFEQUBNNT"
                            },
                            {
                                "type": "text",
                                "text": " you bet, i would wager there is tons of copy\/paste going on inside that monstrous pile of code. Contrast that with a set of well tested, documented components that do one small thing well. Lego vs. the library of congress."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "db95f5ad-7cf4-4bec-a81f-66c9e7d9d854",
        "type": "message",
        "text": "Bazel looks nicer than Make, but since it doesn't compute the dependencies, you have to set up the dependencies yourself, and making the makefile for C was always a pain. It is one of the weaknesses of many older languages is that you can't compute the dependencies quickly and easily. Contrast that with Modula-2 which did not allow dynamic dependencies, and forced all IMPORT statements in the first lines of the program, so you can could scan them instantly to find out what other modules are needed. I am trying like heck to not need a tool like Bazel in my language. Especially with possible remote installation steps to consider, it is a very tricky problem indeed.",
        "user": "UEQ6M68H0",
        "ts": "1587600597.128200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1587600614.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B9+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bazel looks nicer than Make, but since it doesn't compute the dependencies, you have to set up the dependencies yourself, and making the makefile for C was always a pain. It is one of the weaknesses of many older languages is that you can't compute the dependencies quickly and easily. Contrast that with Modula-2 which did not allow dynamic dependencies, and forced all IMPORT statements in the first lines of the program, so you can could scan them instantly to find out what other modules are needed. I am trying like heck to not need a tool like Bazel in my language. Especially with possible remote installation steps to consider, it is a very tricky problem indeed."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "39d75a7b-9caf-4580-aa74-e411b130d0e6",
        "type": "message",
        "text": "Certainly more duplication of effort outside Google in the tens\/hundreds of thousands of software companies who write their own glue code than inside Google. (The same is true of any big company, mind you).",
        "user": "UKJGU23KP",
        "ts": "1587605589.128500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5=uX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Certainly more duplication of effort outside Google in the tens\/hundreds of thousands of software companies who write their own glue code than inside Google. (The same is true of any big company, mind you)."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UBSMEUXAA"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "E2A314C1-F63E-4CD8-8CB1-8CD7A40878A1",
        "type": "message",
        "text": "Yeah, I don’t think Edward was saying Google’s repo was any more of a cesspool than any other (in this instance? :), but that even in a situation that theoretically maximizes the capacity for reuse, there’s a crazy amount of code, which I would agree with.\n\nHickey had that whole talk about decoupling the various semantics of “map” just to the extent that it could run in serial or in parallel, and it’s just plain impossible for every engineer to put that amount of thought into every bit of code they write. I feel that most of the lack of reuse \/ repo bloat is just that: someone writes a module that complects the type of input, type of output, programming language, runtime, threading model, framework, etc, and separating any of those is just so hard that it gets rewritten instead, but with all the same rigidness in a new configuration, because it’s still hard to write in a factored way.",
        "user": "UFEQUBNNT",
        "ts": "1587607050.139900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1587607135.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YhhE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I don’t think Edward was saying Google’s repo was any more of a cesspool than any other (in this instance? :), but that even in a situation that theoretically maximizes the capacity for reuse, there’s a crazy amount of code, which I would agree with.\n\nHickey had that whole talk about decoupling the various semantics of “map” just to the extent that it could run in serial or in parallel, and it’s just plain impossible for every engineer to put that amount of thought into every bit of code they write. I feel that most of the lack of reuse \/ repo bloat is just that: someone writes a module that complects the type of input, type of output, programming language, runtime, threading model, framework, etc, and separating any of those is just so hard that it gets rewritten instead, but with all the same rigidness in a new configuration, because it’s still hard to write in a factored way."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UE0ETTCG7"
                ],
                "count": 2
            },
            {
                "name": "point_up",
                "users": [
                    "UNCP67JSK",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "045cb5c7-8233-4e79-95a9-a322eb45b1c8",
        "type": "message",
        "text": "It is the tangle of dependencies that one encounters that is the main impediment to code re-use. You try to use just one routine, but it calls 3 others which call 3 others, etc., leading to an above-linear increase in the number of included code accompanying the small piece you really wanted. Some languages are more easy to \"tree shake\" than others. I once converted a giant C program to Modula2, and the lines dropped in half, even though the languages are 1:1 identical in almost every statement. The trick was that in Modula2 you had to name every import, and it took work to do that, and to avoid that hassle, unconsciously you would write code that minimized dependencies, and the net result was a higher level of sharing. I would bet with their high salaries and consequent high quality of workers, Google is probably  better than average companies at encouraging code re-use, but Google cannot escape the fact that they are using C++, JS, Java, etc; all languages designed without much care about code re-use, so the geometric increases are going to happen whether they like it or not, simply because of the languages they are using. This same problem of \"copy-pasta\" i believe it is called happened at IBM many years ago. IBM actually encouraged duplication (!) because they felt that otherwise you would be breaking other people's projects with your changes, so they thought non-sharing was safer. Of course it leads to low productivity and the non-fixing of bugs across semi-shared code. Then you have the opposite approach in big open source projects where the damn thing is broken constantly, and you have to cherry pick the right release day to get something reasonably stable. No question in my mind that a world of interchangeable software parts is possible, and will represent a seismic shift in the industry.",
        "user": "UEQ6M68H0",
        "ts": "1587613858.140400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1587614042.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hp+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is the tangle of dependencies that one encounters that is the main impediment to code re-use. You try to use just one routine, but it calls 3 others which call 3 others, etc., leading to an above-linear increase in the number of included code accompanying the small piece you really wanted. Some languages are more easy to \"tree shake\" than others. I once converted a giant C program to Modula2, and the lines dropped in half, even though the languages are 1:1 identical in almost every statement. The trick was that in Modula2 you had to name every import, and it took work to do that, and to avoid that hassle, unconsciously you would write code that minimized dependencies, and the net result was a higher level of sharing. I would bet with their high salaries and consequent high quality of workers, Google is probably  better than average companies at encouraging code re-use, but Google cannot escape the fact that they are using C++, JS, Java, etc; all languages designed without much care about code re-use, so the geometric increases are going to happen whether they like it or not, simply because of the languages they are using. This same problem of \"copy-pasta\" i believe it is called happened at IBM many years ago. IBM actually encouraged duplication (!) because they felt that otherwise you would be breaking other people's projects with your changes, so they thought non-sharing was safer. Of course it leads to low productivity and the non-fixing of bugs across semi-shared code. Then you have the opposite approach in big open source projects where the damn thing is broken constantly, and you have to cherry pick the right release day to get something reasonably stable. No question in my mind that a world of interchangeable software parts is possible, and will represent a seismic shift in the industry."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "1d98ffaa-68e3-4c92-a99f-da302b7cb29a",
        "type": "message",
        "text": "150 lines of code added per person per day, times 200 days a year times 30K developers equals 900 million lines per year added to the repository. If it was 2 billion lines 2015, let's guess that it is about 4-5 billion lines now, based on hopefully replacements rather than pure addition.",
        "user": "UEQ6M68H0",
        "ts": "1587614238.140700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1587614317.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zXkoE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "150 lines of code added per person per day, times 200 days a year times 30K developers equals 900 million lines per year added to the repository. If it was 2 billion lines 2015, let's guess that it is about 4-5 billion lines now, based on hopefully replacements rather than pure addition."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "a7e444bd-5f4c-4c8b-b2be-52bb0bef0b5b",
        "type": "message",
        "text": "Fortunately 150 LoC\/day is an order of magnitude too high for a large company. By the time you've checked that things work for 100M users, and gone through 30k tests, and put up with 16 rounds of bikeshedding and miscellaneous language lawyers, you're lucky to average 10 lines a day.",
        "user": "UCUSW7WVD",
        "ts": "1587614379.141000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1587623528.000000"
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "azfl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fortunately 150 LoC\/day is an order of magnitude too high for a large company. By the time you've checked that things work for 100M users, and gone through 30k tests, and put up with 16 rounds of bikeshedding and miscellaneous language lawyers, you're lucky to average 10 lines a day."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UFEQUBNNT",
                    "U8A5MS6R1",
                    "U79HM6726",
                    "UNCP67JSK",
                    "UKP3B2J5D"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "38521F2D-B76A-4145-AEC3-0319682A6ED8",
        "type": "message",
        "text": "Excuse my ignorance of Modula2, but when you say that it encourages you to minimize dependencies, and that you solve that in a way besides copy-pasting, does that mean you have just one dependency on a “kitchensink” module?",
        "user": "UFEQUBNNT",
        "ts": "1587615630.146000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8971fe7ee8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/68971fe7ee8fd814c26391c727c065bb.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d3NcZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excuse my ignorance of Modula2, but when you say that it encourages you to minimize dependencies, and that you solve that in a way besides copy-pasting, does that mean you have just one dependency on a “kitchensink” module?"
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT"
    },
    {
        "client_msg_id": "c128702c-f9ec-464a-8d41-f278809d90e3",
        "type": "message",
        "text": "I built two of the biggest Modula-2 projects ever made in the language, and used it exclusively for 20 years. Modula2 was the 10 year later sequel to Pascal. The big improvement other than a few expansions of the type system so you could have POINTER TO ARRAY [-5..+5] OF A_RECORD, which beats the hell out of C's nutty notation, was the module system. Modula2 had a unique approach that actually Prof. Wirth discard as cumbersome in Oberon. In Modula-2 each module had 2 separate files, an implementation file (the big one with the actual code) and a definition module, which held publicly visible constants, types, and function declarations. You compiled each of these 2 files separately; the definition first of course. What this gave you is that once you pinned down the external aspects of a module you were free to change the implementation part, and any other module that depended on it did not have to be recompiled when you change only the implementation file; just relink the program and execute. This goes way beyond compiled headers in C, because most of the time you change something in the implementation module, and don't modify the number or type of function parameters. This means recompilation of a 100k line program takes seconds. For small projects it is like having a REPL. There is a freeware Windows compiler (formerly the Stony Brook compiler) on the ADW website. This was the compiler i used for the WIndows side, and there is a small german firm P1 that made the Macintosh compiler.\n\nAnyway by forcing you to constantly evaluate what symbols are public or private, and being able to check that every call has the correct precise type, a great many errors are caught at compile time. Modula-2 was targeting system programming; it had no graphical primitives, so I used Win32 API and on the Macintosh the QuickDraw system (for OS7).  The way the language is structured, it drives you subtly towards a very modular type of coding style. You end up with various function libraries that tackle different tasks, and as your program gets larger you tend to make it even more modular and systematic. So it is a language that encourages virtue and a slightly lower exponent of expansion than C for example. When runtime checks are fully enabled in Modula-2 it puffs up the code by 30%, but that means you have tens of thousands of range checks, assignment compatibility, null pointer, etc. that are very helpful during testing. For golden master you turn them off and your program gets a big speed boost. Although i only got to speak with Prof. Wirth once, i consider myself a disciple of his Swiss school of programming which is all about neatness, economy, and rigor.\n\nModula2 as a language was damaged severely when Prof. Wirth made a sequel called Oberon, but in Oberon 1 he stripped out some very valuable features from Modula-2 and thus made it impossible for the Modula-2 users to move forward. This was not corrected until Oberon 2 and by that time the world has discovered the new panacea of OOP (a disaster IMHO), and Java ran away with the academic market. Modula2 did not have a good free compiler. Interestingly enough Logitech, the famous Mouse maker, was founded by a Swiss person, and they offered one of the first symbolic debuggers, which had the amazing feature that when your program crashed, it would save the entire state of memory and registers, and you could then browse the moment of the crash will full symbols. This post-mortem dump as it was called was a fantastic step forward over the memory dumps and very crude crash reporting systems of other languages.\n\nI mention this because the single hardest feature of my Beads language is the ability to time travel debug post mortem from user submitted dumps. It is pretty easy on a huge development machine to support time travel debugging, but to do that in a shipping product in the customer hands, that is something you don't see often. It is the intermittent errors that are the hardest to debug in my experience, and recreating the exact conditions of the user can be often impossible. I think the biggest scandal in computers today is not the size of the code bases, because with enough sweat and blood you can get  code pretty clean; what is embarrassing is that all the big companies have bug reports numbering in the hundreds of thousands if not millions of open cases that will never get fixed because the staff \"cannot duplicate\".",
        "user": "UEQ6M68H0",
        "ts": "1587625193.146500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S0B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I built two of the biggest Modula-2 projects ever made in the language, and used it exclusively for 20 years. Modula2 was the 10 year later sequel to Pascal. The big improvement other than a few expansions of the type system so you could have POINTER TO ARRAY [-5..+5] OF A_RECORD, which beats the hell out of C's nutty notation, was the module system. Modula2 had a unique approach that actually Prof. Wirth discard as cumbersome in Oberon. In Modula-2 each module had 2 separate files, an implementation file (the big one with the actual code) and a definition module, which held publicly visible constants, types, and function declarations. You compiled each of these 2 files separately; the definition first of course. What this gave you is that once you pinned down the external aspects of a module you were free to change the implementation part, and any other module that depended on it did not have to be recompiled when you change only the implementation file; just relink the program and execute. This goes way beyond compiled headers in C, because most of the time you change something in the implementation module, and don't modify the number or type of function parameters. This means recompilation of a 100k line program takes seconds. For small projects it is like having a REPL. There is a freeware Windows compiler (formerly the Stony Brook compiler) on the ADW website. This was the compiler i used for the WIndows side, and there is a small german firm P1 that made the Macintosh compiler.\n\nAnyway by forcing you to constantly evaluate what symbols are public or private, and being able to check that every call has the correct precise type, a great many errors are caught at compile time. Modula-2 was targeting system programming; it had no graphical primitives, so I used Win32 API and on the Macintosh the QuickDraw system (for OS7).  The way the language is structured, it drives you subtly towards a very modular type of coding style. You end up with various function libraries that tackle different tasks, and as your program gets larger you tend to make it even more modular and systematic. So it is a language that encourages virtue and a slightly lower exponent of expansion than C for example. When runtime checks are fully enabled in Modula-2 it puffs up the code by 30%, but that means you have tens of thousands of range checks, assignment compatibility, null pointer, etc. that are very helpful during testing. For golden master you turn them off and your program gets a big speed boost. Although i only got to speak with Prof. Wirth once, i consider myself a disciple of his Swiss school of programming which is all about neatness, economy, and rigor.\n\nModula2 as a language was damaged severely when Prof. Wirth made a sequel called Oberon, but in Oberon 1 he stripped out some very valuable features from Modula-2 and thus made it impossible for the Modula-2 users to move forward. This was not corrected until Oberon 2 and by that time the world has discovered the new panacea of OOP (a disaster IMHO), and Java ran away with the academic market. Modula2 did not have a good free compiler. Interestingly enough Logitech, the famous Mouse maker, was founded by a Swiss person, and they offered one of the first symbolic debuggers, which had the amazing feature that when your program crashed, it would save the entire state of memory and registers, and you could then browse the moment of the crash will full symbols. This post-mortem dump as it was called was a fantastic step forward over the memory dumps and very crude crash reporting systems of other languages.\n\nI mention this because the single hardest feature of my Beads language is the ability to time travel debug post mortem from user submitted dumps. It is pretty easy on a huge development machine to support time travel debugging, but to do that in a shipping product in the customer hands, that is something you don't see often. It is the intermittent errors that are the hardest to debug in my experience, and recreating the exact conditions of the user can be often impossible. I think the biggest scandal in computers today is not the size of the code bases, because with enough sweat and blood you can get  code pretty clean; what is embarrassing is that all the big companies have bug reports numbering in the hundreds of thousands if not millions of open cases that will never get fixed because the staff \"cannot duplicate\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "thread_ts": "1587586029.117700",
        "parent_user_id": "UFEQUBNNT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            },
            {
                "name": "pray::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    }
]