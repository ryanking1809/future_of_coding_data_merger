[
    {
        "client_msg_id": "4d8ef526-2beb-4be2-bc72-3a62b59f4a7a",
        "type": "message",
        "text": "One bit of prior art to look into is CGAL. CGAL is a computational geometry library which provides algorithms for convex hulls, boolean operations on polygons, etc. (That's an extremely large 'etc'.) CGAL can represent the output of all of its geometric constructions exactly – you can intersect circles and lines and all that without ever losing precision.\n\n(Note that I said \"CAN represent\". One fascinating thing about CGAL is that all of its algorithms are defined in terms of abstract \"kernels\", which say how to perform various primitive operations. You can plug in different kernels, which represent geometric primitives in different ways and which correspondingly have different properties. There's one kernel which says \"just treat points as pairs of floats\", and that kernel is absolutely not exact. But then there's other kernels which do various tricks with interval arithmetic or lazily-computed symbolic trees, and those can give you exact results.)\n\nIt's a ridiculously sophisticated system! If you're dead-set on exact computation, it might be worth looking into.",
        "user": "UBKNXPBAB",
        "ts": "1561537588.381900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48812709bdc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d48812709bdc0ff86746b7fbe56b0f13.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJTHWNH2T"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "1380ad8b-66e4-417e-b8af-87805c38e69d",
        "type": "message",
        "text": "More details:\n<https:\/\/www.cgal.org\/exact.html>\n<https:\/\/doc.cgal.org\/latest\/Manual\/tutorial_hello_world.html>\n<https:\/\/doc.cgal.org\/latest\/Kernel_23\/index.html>\n<https:\/\/cs.nyu.edu\/~exact\/>",
        "user": "UBKNXPBAB",
        "ts": "1561537742.382100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48812709bdc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d48812709bdc0ff86746b7fbe56b0f13.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "5a85a604-4370-42f3-848c-4c9fbc092bc2",
        "type": "message",
        "text": "<@UBKNXPBAB> oh CGAL!  Had some good times with it doing \"quadratic programming\" (find the shortest weighted distance subject to linear constraints).  Broke it hard, now I'm wedded to Gurobi <http:\/\/www.gurobi.com\/>.",
        "user": "UA14TGLTC",
        "ts": "1561542290.382300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Gurobi Optimization - The State-of-the-Art Mathematical Programming Solver",
                "title_link": "http:\/\/www.gurobi.com\/",
                "text": "Gurobi builds and supports the leading math programming solvers available for all major problem types. It's all we do.",
                "fallback": "Gurobi Optimization - The State-of-the-Art Mathematical Programming Solver",
                "from_url": "http:\/\/www.gurobi.com\/",
                "service_icon": "http:\/\/www.gurobi.com\/favicon.ico?v=1",
                "service_name": "gurobi.com",
                "id": 1,
                "original_url": "http:\/\/www.gurobi.com\/"
            }
        ],
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "74699B63-C248-4635-B298-87A87B961E2E",
        "type": "message",
        "text": "Let’s talk about note taking: <https:\/\/doodle.com\/poll\/43w26m9zk49hhart>\n\n(I’d expect the call to be at least 60, if not 90 minutes. Seems like I can’t change the duration on an iPad…)",
        "user": "U5STGTB3J",
        "ts": "1561546040.387500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Doodle: Note-taking Nerds",
                "title_link": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart",
                "text": "Doodle is the simplest way to schedule meetings with clients, colleagues, or friends. Find the best time for one-to-ones and team meetings with our user-friendly calendar tool. Get started today!",
                "fallback": "Doodle: Note-taking Nerds",
                "image_url": "https:\/\/doodle.com\/graphics\/static\/facebookSharingThumbnail.png",
                "from_url": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart",
                "image_width": 300,
                "image_height": 200,
                "image_bytes": 6864,
                "service_icon": "https:\/\/cdn2.doodle.com\/dist\/i\/7479b568749fca315a2969e30cbee4f5.png",
                "service_name": "doodle.com",
                "id": 1,
                "original_url": "https:\/\/doodle.com\/poll\/43w26m9zk49hhart"
            }
        ],
        "thread_ts": "1561232606.230800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "2abdb4f7-1ec6-4dd2-9723-d5ea614b027a",
        "type": "message",
        "text": "One way to build Wikis with GToolkit with no extra code is to make each Wiki page a Pharo class, with the text in the class comment. Then use class annotations as links. Since the pages are then considered to be source code by Pharo tools, you get version control (via Iceberg, Pharo's git interface) for free. Much of the GToolkit documentation is actually written this way, so just get GToolkit and look at the tutorials to see how this works in practice.\n\nI have been playing with *computational* wikis in Pharo\/GToolkit recently (see <https:\/\/github.com\/activepapers\/activepapers-pharo> for the details). That took some extra code because I wanted groups of Wiki pages with a shared code basis. One Pharo class is then a package of code, data, and Wiki pages.",
        "user": "UJBAJNFLK",
        "ts": "1561558870.388200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e4cf66ef1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/305e4cf66ef1179f7e95981b1520ba1a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559842449.041100",
        "parent_user_id": "UHWC9PXBL"
    },
    {
        "client_msg_id": "a262cfde-f8b1-4721-a86f-07274211540f",
        "type": "message",
        "text": "<@UC2A2ARPT> You don't say much about how your lines are defined. If it's always two Cartesian points, and if the concrete values of these points are always rational numbers (e.g. via a constraint on the inputs), then you can just compare the squares of the lengths and never need more than rational arithmetic.\n\nComputable numbers (a more common term than \"constructable\" in my opinion) may also be a practical solution, depending on what exactly you need to do. In general, both memory and CPU requirements are unbounded if your inputs can be arbitrary (but then that's true for rational numbers as well). But if precision requirements are modest **in practice** even if not in theory, there might be no problem in practice either. However, computable numbers are tricky in other respects. For example, equality is not computable (intuitively, it takes forever to compare infinitely many digits). That makes comparisons a bit of a challenge.",
        "user": "UJBAJNFLK",
        "ts": "1561560273.388400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e4cf66ef1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/305e4cf66ef1179f7e95981b1520ba1a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "b3e1b3e8-c2dd-4629-ae78-86594c76c173",
        "type": "message",
        "text": "Hi Konrad — yep, it seems we're on the same page.\n\n• My lines are currently defined as arbitrary degree Bezier curves computed from rational-valued Cartesian points. I _believe_ I can do most calculations on these deterministically — eg: comparing squared lengths — but maybe not intersections, nor other non closed-form operations.\n• These lines might eventually be specified using other formulations, like NURBS, or finite segments of plots of symbolic expressions.\n• I do need to be able to order these lines by length (and the length might come as the result of an intersection or other non closed-form expression), and I need to be able to determine if lines have equal length (so that I know when to resolve the ambiguity of ordering using a deterministic tiebreaker).\n• I need to be able to do this hundreds of thousands of times per second, without stutter, which probably means I can't use any approach that requires integration of intermediate values. (Integration of _final_ values is probably fine, because I can converge those across time, as <@UA14TGLTC> suggested.)\n• In practice, my precision requirements are very modest — but I require strict determinism. When ordering these lines by length, the ordering must be perfectly stable in all cases. When push comes to shove, I'm willing to sacrifice basically _all_ my precision \/ numerical correctness in order to preserve determinism. Yes, I will multiply all intermediate values by a large constant integer factor and truncate decimals if I have to.\n• But accepting any degree of imprecision \/ incorrectness means I'm not doing FRP.\n\n...and... if you can't do FRP with even relative common occurrences in realtime computer graphics, like intersecting lines... then what are we to make of it?",
        "user": "UC2A2ARPT",
        "ts": "1561563899.388600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1561564162.000000"
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "fce56839-ae43-4e97-a62d-b7707e9e36e8",
        "type": "message",
        "text": "<@U8A5MS6R1> Exploring outward from SymPy, I found <http:\/\/algebrite.org> and <https:\/\/mathjs.org>. (Yes, I'm trying to do this in JS. _Kill me._)\n\nThere might be something here. Being able to do all my math in an intermediate symbolic form — by restricting what sorts of operations are permitted to only those that can be handled quickly and exactly — might just be the perfect determinism + Reals holy grail.",
        "user": "UC2A2ARPT",
        "ts": "1561564888.389300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1561564896.000000"
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "714c07b9-0670-49c4-93c9-d24ca620d3fc",
        "type": "message",
        "text": "It'll depend on how complex those symbolic forms get as time goes by. If in practice they can regularly be collapsed down to exact integer values or simplified forms, that won't be so bad. But if I need to calculate the position of a particle on a complicated path that ends in a loop.. I can picture the symbolic form just accreting terms and growing unbounded as time progresses.",
        "user": "UC2A2ARPT",
        "ts": "1561565248.389800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1561566243.000000"
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "339564c9-9d8d-4dba-bb32-c4bf96472c63",
        "type": "message",
        "text": "<@UC2A2ARPT> maybe <https:\/\/github.com\/tidalcycles\/Tidal> could be of some inspiration <https:\/\/slab.org\/tmp\/p63.pdf>",
        "user": "UEGFXUK3M",
        "ts": "1561572098.390100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "26140d57-6feb-4c5d-aaf8-1772672ee782",
        "type": "message",
        "text": "<@UKVP5FY9J> fantastic work, I had no idea this existed!",
        "user": "UEGFXUK3M",
        "ts": "1561572241.390600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1560875589.451900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKVP5FY9J"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "7595745e-1982-4b08-b6ea-22471cdfdcd1",
        "type": "message",
        "text": "going to be on vacation in maine that week so i may have connectivity issues",
        "user": "UHWC9PXBL",
        "ts": "1561577048.390800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "",
            "real_name": "Garth Goldwater",
            "display_name": "Garth Goldwater",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561232606.230800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "640f0cda-193b-467e-ab16-a0800df463b5",
        "type": "message",
        "text": "<@UJN1TAYEQ> what are his criticisms? Mine are based off java, which I know is limited.",
        "user": "UJNJQD2AC",
        "ts": "1561587979.391000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561056918.039200",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "8e6f562a-cd92-44da-8937-a783b8472d6c",
        "type": "message",
        "text": "Has anyone read \"the little typer\"? Is it a good place to start to get an idea of the cutting edge of type systems? I'm not looking for anything practical like haskell, I'm just curious how seamless types can be. my wish list would be that I want them to be inferred, extensible, composible, I should also get generative testing  for free.",
        "user": "UJNJQD2AC",
        "ts": "1561588276.396900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1561597452.000000"
        },
        "thread_ts": "1561588276.396900",
        "reply_count": 6,
        "reply_users_count": 5,
        "latest_reply": "1561644992.402100",
        "reply_users": [
            "UC2A2ARPT",
            "UJNJQD2AC",
            "UF71PR58X",
            "UA14TGLTC",
            "UF2GNRUTV"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1561590373.397300"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1561597463.399700"
            },
            {
                "user": "UF71PR58X",
                "ts": "1561626331.400200"
            },
            {
                "user": "UF71PR58X",
                "ts": "1561626440.400400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1561636601.400600"
            },
            {
                "user": "UF2GNRUTV",
                "ts": "1561644992.402100"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "EDEB3E30-B9BD-4479-9D1C-3A2651C847DA",
        "type": "message",
        "text": "Do you mean The Little Typer?",
        "user": "UC2A2ARPT",
        "ts": "1561590373.397300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561588276.396900",
        "parent_user_id": "UJNJQD2AC"
    },
    {
        "client_msg_id": "BEBB59EB-E910-4E8D-85A2-B0D2E0A99A42",
        "type": "message",
        "text": "Finally got a straight answer about this — yeowzers! <https:\/\/twitter.com\/conal\/status\/1144005285284995072>",
        "user": "UC2A2ARPT",
        "ts": "1561590470.398300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/conal|@conal>: <https:\/\/twitter.com\/spiralganglion|@spiralganglion> <https:\/\/twitter.com\/mimblewabe|@mimblewabe> <https:\/\/twitter.com\/shachaf|@shachaf> <https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh> <https:\/\/twitter.com\/sigfpe|@sigfpe> I don't know of any FRP implementation that has taken these questions seriously by using exact reals. Ditto for *spatially* continuous 2D and 3D graphics (e.g., vector graphics and continuous infinite imagery - <http:\/\/conal.net\/Pan\/>).",
                "ts": 1561587089,
                "author_name": "Conal Elliott",
                "author_link": "https:\/\/twitter.com\/conal\/status\/1144005285284995072",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/77498688\/two_conals_and_sof_spiral_600_normal.jpg",
                "author_subname": "@conal",
                "text": "<https:\/\/twitter.com\/spiralganglion|@spiralganglion> <https:\/\/twitter.com\/mimblewabe|@mimblewabe> <https:\/\/twitter.com\/shachaf|@shachaf> <https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh> <https:\/\/twitter.com\/sigfpe|@sigfpe> I don't know of any FRP implementation that has taken these questions seriously by using exact reals. Ditto for *spatially* continuous 2D and 3D graphics (e.g., vector graphics and continuous infinite imagery - <http:\/\/conal.net\/Pan\/>).",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/conal\/status\/1144005285284995072",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/conal\/status\/1144005285284995072",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "14fef6b9-fc0d-45c4-b476-b4c424b8b4ec",
        "type": "message",
        "text": "<@UEGFXUK3M> Yeah, it seems Tidal stores times as rationals and not floats. That is 100% the direction I'm leaning toward — using all my best tricks to avoid floats at all costs and doing everything in a way that preserves precision in intermediate values. That, of course, means not using the JS-provided trig functions, and not implementing algorithms that depend on sqrt, etc. Not impossible, but certainly not straightforward for an _I just make indie games_ person like myself.",
        "user": "UC2A2ARPT",
        "ts": "1561595259.398600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1561595298.000000"
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEGFXUK3M"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "f43385fd-db45-463a-b597-8f28901cb9d0",
        "type": "message",
        "text": "<@UBKNXPBAB> That reference is _fantastic_. I'd never heard of this tool, but it sounds like they designed it to solve _exactly_ the problem I'm facing. The writeup [<https:\/\/www.cgal.org\/exact.html>] is a better articulation of my pain that I've yet been able to put together myself.\n\nI don't think their escape hatch (arbitrary precision) is appropriate for my needs — I need to set tight execution time limits, and if I'm going to be cutting things off I might as well just use well-chosen finite numeric representations at all times.\n\nBut I so love that they've approached the problem with this perspective:\n\n&gt; The second and deeper problem is that numerical weapons are per se less effective in geometric computing than they are in other fields. In geometry, we don't compute numbers but structures: convex hulls, triangulations, etc. In building these structures, the underlying algorithms ask questions like \"is a point to the left, to the right, or on the line through two other points?\" Such questions have no answers that are \"slightly off\". Either you get it right, or you don't. And if you don't, the algorithm might go completely astray. Even the most fancy roundoff control techniques don't help here: it's primarily a combinatorial problem, not a numerical one.\n\n&gt; We concentrate on the geometry (after all, that's what we do best), and the CGAL algorithms themselves don't contain any numerical security measures to keep them from going astray.\n\nThat's perfect. And I think I can do just as well by restricting my domain to things that are simple, cleanly representable, and closed-form. Fingers crossed!",
        "user": "UC2A2ARPT",
        "ts": "1561595804.398900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1561595840.000000"
        },
        "thread_ts": "1561516587.375600",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5TCAFTD3"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJN1TAYEQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "0124a7af-c9d7-4fb5-a443-0fd6b76acbb8",
        "type": "message",
        "text": "I suppose I should also mention that this project, or rather its previous Illuminatio X Machina form factor, has inspired me to get a pile of sub-$1 arduinoish development boards to see if I could network together something interesting. (Now as a software guy, \"network\" here refers to \"solder together gpio pins pairwise\" - I'm sure it'll be noisy as all tarnation but hopefully a few kilobits can squeeze through). The _nominal_ goal is to reach T2 ULAM parity(in the current 60*40 configuration, 1 atom updating 20x\/second per 5¢ BOM) without half a year of lead time designing and assembling PCBs - I don't expect to meet it exactly but I'll sure learn a lot about UARTs and the like!",
        "user": "UJUGB1XGD",
        "ts": "1561597230.399300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2810c79d33a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f2810c79d33a097f4e0900c9622b5106.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "fyr",
            "display_name": "fyr",
            "team": "T5TCAFTA9",
            "name": "ohaitch",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJUGB1XGD",
            "ts": "1561662227.000000"
        },
        "thread_ts": "1560875589.451900",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UFV8P4472",
                    "UBSMEUXAA",
                    "UEGFXUK3M"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "6d653304-cfb7-4338-8288-bac6d274d8a0",
        "type": "message",
        "text": "yes :slightly_smiling_face:, thats what i get for posting on my phone.",
        "user": "UJNJQD2AC",
        "ts": "1561597463.399700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561588276.396900",
        "parent_user_id": "UJNJQD2AC",
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    }
]