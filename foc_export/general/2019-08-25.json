[
    {
        "client_msg_id": "44A32D23-1EFB-4069-A09F-9B6BFD1EB439",
        "type": "message",
        "text": "One aspect that I see rarely discussed in the context of (im)mutability is the scale at which it applies. At small scale (local, low-level, etc.), mutability is still needed for efficiency, but isn’t problematic exactly because of the small scale,  which limits complexity. At the other end of the spectrum, system integration (a Unix installation with its file system, a Smalltalk image), mutability is often desirable because jt reflects the real-world requirements (e.g. editing a file), and again it’s usually unproblematic because the complexity is managed by the user. That leaves a huge collection of intermediate layers where immutability is extremely helpful for taming complexity.",
        "user": "UJBAJNFLK",
        "ts": "1566724381.455000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g05e4cf66ef1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/305e4cf66ef1179f7e95981b1520ba1a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566673857.433900",
        "parent_user_id": "UJN1TAYEQ",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4a35739c-9dfa-48cb-928c-37a909310693",
        "type": "message",
        "text": "&gt; The Model 33 used the seven-bit upper-case only ASCII code\n.. according to wikipedia .. so how do you explain the revolutionary use of lowercase throughout C, and Unix?",
        "user": "UE6EFEPTQ",
        "ts": "1566736704.455300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "e431bc48-82e3-4847-a5e9-13dd23091a28",
        "type": "message",
        "text": "(also _citation needed_ for the above!)",
        "user": "UE6EFEPTQ",
        "ts": "1566736722.455500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "74fe6f6c-2be9-48f6-ae1d-d07f44603ce7",
        "type": "message",
        "text": "Found this: <https:\/\/www.scriptol.com\/programming\/c-language.php>",
        "user": "UE6EFEPTQ",
        "ts": "1566736927.455700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "0823207e-eb7a-4258-9c65-712148a54c52",
        "type": "message",
        "text": "although it's the history of B which we should dig in to, as it also had lowercase keywords",
        "user": "UE6EFEPTQ",
        "ts": "1566737409.455900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "835b43ef-9504-4056-9133-78e5c6a9f910",
        "type": "message",
        "text": "Almost all languages you don't really define the memory layout, because you have only 1 choice. Languages that give you &gt;1 choice for layout are typically very low level.. and in those if you want to not hard-code that choice you use.. templates? :slightly_smiling_face:",
        "user": "UHDQ62M4P",
        "ts": "1566747978.456100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "753ae075-2286-4445-befc-3c39fb5ceeef",
        "type": "message",
        "text": "Yes that's what I mean. You don't get any choice and the 'definition' implies both - the data model and the memory layout. Even in Haskell where you define only algebraic data types, and implicit layout is provided by the language. In C it seems like the memory layout is more explicit, though you're still defining a data model. Maybe some trickery is possible with C++ templates but it seems really clunky to do it everywhere. What I'm looking for is languages that explicitly support the notion of *data type only* and separately *mapping to bits* - potentially even support multiple representations at the same time in different places. The motivation is our business logic should not be coupled to lower level details, but optimization should still be possible - separate 'design' from 'optimization' in some sense. Here's a related post from before: <https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1562172714184400?thread_ts=1562010026.133300&amp;cid=C5U3SEW6A>",
        "user": "U8A5MS6R1",
        "ts": "1566750950.456300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh Chaturvedi",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1562172714184400?thread_ts=1562010026.133300&amp;cid=C5U3SEW6A",
                "fallback": "[July 3rd, 2019 9:51 AM] shalabh.chaturvedi: The tension between machine types and domain types hasn't been satisfactorily resolved in any language afaik. Do 'types' declare how bits are laid out in memory or do they declare what the domain meaning is? Without a good solution here, what we have is excessive domain model corruption to appease the machine layout. Starting with C, you had struct packing where you'd suffle fields in a perfectly readable struct just to make it efficient. Then you have the 'array of structs' vs 'structs of arrays' problem. This happens in databases too - the question of how much to normalize. There is absolutely no change to the domain data model across many implementation choices, yet the 'domain logic' code ends up being so tightly coupled to these decisions that switching it requires changing code all over the place. I think what the essay is saying that they want to work more with the domain types than memory layout types. Languages that I know of don't actually separate these two ideas - I wonder if there are any languages that do. E.g. if you define your domain types in a high level type system that is not tied to a specific memory layout. Then separately you define mappings between the domain types and machine types...",
                "ts": "1562172714.184400",
                "author_id": "U8A5MS6R1",
                "author_subname": "Shalabh Chaturvedi",
                "channel_id": "C5U3SEW6A",
                "channel_name": "random",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "The tension between machine types and domain types hasn't been satisfactorily resolved in any language afaik. Do 'types' declare how bits are laid out in memory or do they declare what the domain meaning is? Without a good solution here, what we have is excessive domain model corruption to appease the machine layout. Starting with C, you had struct packing where you'd suffle fields in a perfectly readable struct just to make it efficient. Then you have the 'array of structs' vs 'structs of arrays' problem. This happens in databases too - the question of how much to normalize. There is absolutely no change to the domain data model across many implementation choices, yet the 'domain logic' code ends up being so tightly coupled to these decisions that switching it requires changing code all over the place. I think what the essay is saying that they want to work more with the domain types than memory layout types. Languages that I know of don't actually separate these two ideas - I wonder if there are any languages that do. E.g. if you define your domain types in a high level type system that is not tied to a specific memory layout. Then separately you define mappings between the domain types and machine types...",
                "author_name": "Shalabh Chaturvedi",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U8A5MS6R1",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1562172714184400?thread_ts=1562010026.133300&amp;cid=C5U3SEW6A",
                "footer": "From a thread in #random"
            }
        ],
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "155c71f7-5e87-428d-9b52-ea5b1a4e571b",
        "type": "message",
        "text": "I'm not sure I follow.. in some sense, Java, Python, Haskell.. these languages you define data type only, since mapping to bits is either mostly invisible to you or not under your control anyway.. are you saying you want a low level language where flipping between, say, inline and heap allocation of members is more convenient than with templates or whatever?",
        "user": "UHDQ62M4P",
        "ts": "1566751384.456600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "a3f4862e-c52e-439f-9f46-38d863015997",
        "type": "message",
        "text": "maybe you should give an example",
        "user": "UHDQ62M4P",
        "ts": "1566751760.456800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "276d3d15-dc64-494c-95d6-76e446bd8376",
        "type": "message",
        "text": "7-bit ascii holds upper and lower case. The early internet was all  7 bit. You only need the upper 128 characters for accented chars. Since the designers of unix spent their formative years not worrying about case, once terminals became available it just defaulted to a single case and in e.e.cummings style they ignored upper case in C. Contrast with Pascal which used upper case for all keywords, which helped distinguish reserved words from regular words before syntax coloring existed since terminals were monochrome.",
        "user": "UEQ6M68H0",
        "ts": "1566752025.457000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "d04cccde-69c7-478a-ade9-8176cd21b215",
        "type": "message",
        "text": "Back in those days computer companies couldn't agree an anything. Burrough's had punchcards with circular holes, IBM was rectangular holes. IBM used EBCDIC for encoding, which put A, B, C at different code points than ASCII. So nothing could be interchanged between vendors. So much needless friction because nobody agreed on basic stuff.",
        "user": "UEQ6M68H0",
        "ts": "1566752355.457200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "a84f9382-c328-42bb-b638-c09b157a0d31",
        "type": "message",
        "text": "And by the way the Model 33 had upper case",
        "user": "UEQ6M68H0",
        "ts": "1566752439.457400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "type": "message",
        "text": "Photo of teletype keyboard",
        "files": [
            {
                "id": "FMPJN3WPP",
                "created": 1566752459,
                "timestamp": 1566752459,
                "name": "image.png",
                "title": "image.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UEQ6M68H0",
                "editable": false,
                "size": 963734,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-FMPJN3WPP\/image.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-FMPJN3WPP\/download\/image.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_64.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_80.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_360.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_360_w": 360,
                "thumb_360_h": 270,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_480.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_480_w": 480,
                "thumb_480_h": 360,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_160.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_720.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_720_w": 720,
                "thumb_720_h": 540,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_800.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_800_w": 800,
                "thumb_800_h": 600,
                "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FMPJN3WPP-9cf33ae7a2\/image_960.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_960_w": 960,
                "thumb_960_h": 720,
                "image_exif_rotation": 1,
                "original_w": 1024,
                "original_h": 768,
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/UEQ6M68H0\/FMPJN3WPP\/image.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-FMPJN3WPP-9eb39f290f",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "user": "UEQ6M68H0",
        "display_as_bot": false,
        "ts": "1566752463.457600",
        "client_msg_id": "55a71e2f-ce78-4245-9787-249789cf65c3",
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "1be84028-03e7-4842-b94d-bf2b72befad1",
        "type": "message",
        "text": "I once tried one of those teletypes. It had the highest downforce of any keyboard known to man, and i can well imagine the designers of C not wanting to have to push down on that shift key which had a strong spring. Terrible ergonomics on those machines, but they were quite sturdy, a kind of world war 2 design aesthetic hangover; build it so that it will survive a bomb blast.  And notice the red highlights for the CTRL prefix, people had to send the control characters manually back then. Serial communication at its peak!",
        "user": "UEQ6M68H0",
        "ts": "1566752685.458000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1566791868.000000"
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    },
    {
        "client_msg_id": "E35E7591-12A2-44B5-A97F-DA73F42139B2",
        "type": "message",
        "text": "<https:\/\/twitter.com\/emi1ypi\/status\/1165348474990321665?s=21>",
        "user": "UJFN50C00",
        "ts": "1566756680.458300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/emi1ypi|@emi1ypi>: Imagine the utopia of an bidirectional optics-based language, where pattern matches are generated by admissible prisms of sums, record accessors and updates are composable, zippers for free, all containers are differentiable and traversable. <https:\/\/pbs.twimg.com\/tweet_video_thumb\/ECwmQTPXkAEuNaD.jpg>",
                "ts": 1566675702,
                "author_name": "よ",
                "author_link": "https:\/\/twitter.com\/emi1ypi\/status\/1165348474990321665",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1049521126294974464\/ahl-7lA5_normal.jpg",
                "author_subname": "@emi1ypi",
                "text": "Imagine the utopia of an bidirectional optics-based language, where pattern matches are generated by admissible prisms of sums, record accessors and updates are composable, zippers for free, all containers are differentiable and traversable.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/emi1ypi\/status\/1165348474990321665?s=21",
                "thumb_url": "https:\/\/pbs.twimg.com\/tweet_video_thumb\/ECwmQTPXkAEuNaD.jpg",
                "thumb_width": 497,
                "thumb_height": 468,
                "video_html_width": 498,
                "video_html_height": 468,
                "video_html": "<video autoplay loop muted poster=\"https:\/\/pbs.twimg.com\/tweet_video_thumb\/ECwmQTPXkAEuNaD.jpg\" width=\"498\" height=\"468\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/tweet_video\/ECwmQTPXkAEuNaD.mp4\"><\/video>",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/emi1ypi\/status\/1165348474990321665?s=21",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "thread_ts": "1566756680.458300",
        "reply_count": 5,
        "reply_users_count": 2,
        "latest_reply": "1567002667.002800",
        "reply_users": [
            "UA14TGLTC",
            "UM1HH60GN"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1566788920.461900"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1567002534.001400"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1567002559.001600"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1567002617.002000"
            },
            {
                "user": "UM1HH60GN",
                "ts": "1567002667.002800"
            }
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC",
                    "UJC8ZDSTX"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "43b4c39f-35fd-403c-b674-51dc37cedda2",
        "type": "message",
        "text": "How about in Jai, where you choose whether to store collections as AOS vs SOA? That's a language-level feature (whereas in C, you still do AOS vs SOA, but you do it manually IIRC)",
        "user": "UC2A2ARPT",
        "ts": "1566763148.458600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UHDQ62M4P",
                    "U79HM6726",
                    "UNC5FQMD3",
                    "UD6EXQVM0"
                ],
                "count": 5
            }
        ]
    },
    {
        "client_msg_id": "9aef17c8-320c-4c0f-9f5b-a57ea082b909",
        "type": "message",
        "text": "I think that should count as separately defining the \"business shape\" — _this is a collection of structs with these fields_ — and the memory layout — _this is to be stored as a struct of arrays, since that better matches my access pattern and better leverages the cpu caches_.",
        "user": "UC2A2ARPT",
        "ts": "1566763254.458800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "b8ff9d05-14a9-481e-84da-ab8c16ff31c8",
        "type": "message",
        "text": "I've also seen something like this in Clojure. For instance, Karsten Schmidt's <http:\/\/thi.ng|thi.ng> geom library is full of functions that operate on various kinds of vector, which have an explicit sense of the data type (vec2 vs vec3 vs arbitrary dimension vector).. but the underlying bit representation in memory is left up to the programmer — it just needs to support positional access by conforming to the appropriate Clojure protocols.\n\nAlso, what about swizzling? Would that count? That tends to be offered as a language level feature for handling separately the memory layout of fields and their meaning.",
        "user": "UC2A2ARPT",
        "ts": "1566763515.459000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1566826652.000000"
        },
        "thread_ts": "1566688846.441800",
        "parent_user_id": "U8A5MS6R1"
    },
    {
        "client_msg_id": "a5472fbe-ad0b-4657-929c-76bc34f167fa",
        "type": "message",
        "text": "Wolfram is one of the best programmers on the planet, so being compared with him is always a compliment.",
        "user": "UEQ6M68H0",
        "ts": "1566777824.461000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566673857.433900",
        "parent_user_id": "UJN1TAYEQ",
        "reactions": [
            {
                "name": "fencer",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "smile",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "013ec4d8-3993-4992-9948-cc47316a7fd0",
        "type": "message",
        "text": "Mathematica as a company has 700 full time people, certainly one of the largest pure tool companies in the software business. He chose a very interesting business model, to sell site licenses to universities, which gets people hooked on it, and lives off expensive commercial licenses. Mathematica is $2500 for single licenses, $7000 for enterprise users. By comparison Autocad is 9000 employees. So in terms of engineering employee count I think at this point it is Google &gt; Adobe &gt; Autocad &gt; JetBrains &gt; Mathematica &gt; Embarcadero (Delphi)... not sure who slots in below that, there aren't that many tool companies when you think about how many computers there are.",
        "user": "UEQ6M68H0",
        "ts": "1566778188.461200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566673857.433900",
        "parent_user_id": "UJN1TAYEQ"
    },
    {
        "client_msg_id": "7292d48f-7603-447f-a565-68b4368d2f1a",
        "type": "message",
        "text": "And we get a good way of representing intermediate inconsistent states?",
        "user": "UA14TGLTC",
        "ts": "1566788920.461900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566756680.458300",
        "parent_user_id": "UJFN50C00"
    },
    {
        "client_msg_id": "04d8f67e-5436-4b75-a9c6-f6ef8fb27cbd",
        "type": "message",
        "text": "<@UEQ6M68H0> \"Back in those days... couldn't agree\" — if only!  To think that it has improved, which it kind of has, but then there's the feel of picking the worst of all standards.  At least with text we have UTF8, which isn't so bad all things considered.",
        "user": "UA14TGLTC",
        "ts": "1566790335.462100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1566613671.428600",
        "parent_user_id": "UA14TGLTC"
    }
]