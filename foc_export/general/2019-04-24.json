[
    {
        "client_msg_id": "08ee861b-c302-4d83-9248-b290b381b402",
        "type": "message",
        "text": "Why do we need modules at all? by Joe Armstrong  <http:\/\/erlang.org\/pipermail\/erlang-questions\/2011-May\/058768.html>",
        "user": "UBN9AFS0N",
        "ts": "1556093559.171000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556093559.171000",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1556099484.172100",
        "reply_users": [
            "UAL7940NM",
            "UBN9AFS0N",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "UAL7940NM",
                "ts": "1556094842.171100"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1556095226.171300"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1556095302.171500"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1556095916.171700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1556099484.172100"
            }
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UFEQUBNNT",
                    "UJ6LDMMN0",
                    "U8A5MS6R1"
                ],
                "count": 4
            }
        ]
    },
    {
        "client_msg_id": "606319ca-b9b9-45e9-a33d-07918b5b8931",
        "type": "message",
        "text": "(Re-Posting from DM with <@UBN9AFS0N> )\nI've been thinking about something similar some time ago and would love to see it implemented somewhere. One problem I see with \"globally unique function names\" though is that everyone would have to agree on how to name things. This will lead to very weird function names eventually because \"intuitive\" names are already taken.\nA possible solution to this problem would be to use content-hashs instead of names in the key-value-store. An environment could allow users to define alias names for hash values so that one could view \/ edit code using intuitive names. Behind the scenes, the environment would write the hashs to source files. This would push human-readable names to the presentation layer (which could be customized by users) and would also make name-resolution trivial. Functions could have a \"default name\" that wouldn't have to be globally unique. An environment could use this default name to decide how to display functions for which there's no alias defined. If the default name equals an alias, it could automatically be displayed differently (e.g. using different color or by adding `*` to the displayed name).\nA problem with this would be that different people could use different names for the same function which would make talking about it difficult (just imagine viewing a presentation of a team member who uses different alias names for every function). This problem could be addressed by sharing alias sets or even having recommended alias sets maintained by organizations. Because aliases could be changed without breaking any code, alias sets could evolve more quickly which would hopefully let them converge to a universally agreed upon alias set. Individual users could still tweak these sets if they feel they need to.",
        "user": "UAL7940NM",
        "ts": "1556094842.171100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556093559.171000",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "47dfdf09-54c3-45b5-a905-a8b66a44f234",
        "type": "message",
        "text": "<https:\/\/joearms.github.io\/published\/2015-03-12-The_web_of_names.html>",
        "user": "UBN9AFS0N",
        "ts": "1556095226.171300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556093559.171000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "2e18af38-83c9-4f9b-8321-39b83dd0a828",
        "type": "message",
        "text": "related discussions: <http:\/\/lambda-the-ultimate.org\/node\/5079> and <https:\/\/news.ycombinator.com\/item?id=2580383>",
        "user": "UBN9AFS0N",
        "ts": "1556095302.171500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556093559.171000",
        "parent_user_id": "UBN9AFS0N"
    },
    {
        "client_msg_id": "62037c65-3b7d-435d-b5a3-53206d061a76",
        "type": "message",
        "text": "he covers it here too <https:\/\/youtu.be\/lKXe3HUG2l4?t=1925>",
        "user": "UBN9AFS0N",
        "ts": "1556095916.171700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "\"The Mess We're In\" by Joe Armstrong",
                "title_link": "https:\/\/youtu.be\/lKXe3HUG2l4?t=1925",
                "author_name": "Strange Loop",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC_QIfHvN9auy2CoOdSfMWDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/lKXe3HUG2l4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: \"The Mess We're In\" by Joe Armstrong",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/lKXe3HUG2l4?start=1925&feature=oembed&start=1925&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/lKXe3HUG2l4?t=1925",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/lKXe3HUG2l4?t=1925"
            }
        ],
        "thread_ts": "1556093559.171000",
        "parent_user_id": "UBN9AFS0N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAJ9DV971"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "I strongly agree with Joe's perspective on modules. They're ultimately an arbitrary construct, and conflate several different goals (most of which relate to working with text files and avoiding name clashes). The only true utility they offer (as far as I see) is the ability to define abstract data types whose implementation is hidden. For such a use case, we could use a simpler construct, something akin to a standard `let` expression (see Haskell\/ML) that returns names to add to a scope (rather than a value).",
        "user": "UCGAK10LS",
        "ts": "1556099484.172100",
        "thread_ts": "1556093559.171000",
        "root": {
            "client_msg_id": "08ee861b-c302-4d83-9248-b290b381b402",
            "type": "message",
            "text": "Why do we need modules at all? by Joe Armstrong  <http:\/\/erlang.org\/pipermail\/erlang-questions\/2011-May\/058768.html>",
            "user": "UBN9AFS0N",
            "ts": "1556093559.171000",
            "team": "T5TCAFTA9",
            "thread_ts": "1556093559.171000",
            "reply_count": 5,
            "reply_users_count": 3,
            "latest_reply": "1556099484.172100",
            "reply_users": [
                "UAL7940NM",
                "UBN9AFS0N",
                "UCGAK10LS"
            ],
            "subscribed": false
        },
        "client_msg_id": "f0eac780-4858-486d-bb82-dbdf66e33e9a",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "12a82d60-52c5-474a-a805-4cbd81dae537",
        "type": "message",
        "text": "<https:\/\/www.indiegogo.com\/projects\/the-augmentation-of-douglas-engelbart?fbclid=IwAR0eDeCKSLG-3_TOfGSkbVdDzGHKavwq4Pyb-EMsbdZXdGoOlIyeI3DAIaA#\/>",
        "user": "UGLSY9X3J",
        "ts": "1556114636.172700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Indiegogo",
                "title": "The Augmentation of Douglas Engelbart",
                "title_link": "https:\/\/www.indiegogo.com\/projects\/the-augmentation-of-douglas-engelbart?fbclid=IwAR0eDeCKSLG-3_TOfGSkbVdDzGHKavwq4Pyb-EMsbdZXdGoOlIyeI3DAIaA#\/",
                "text": "A full length documentary on one of the most brilliant minds of the 20th century, Douglas Engelbart. | Check out 'The Augmentation of Douglas Engelbart' on Indiegogo.",
                "fallback": "Indiegogo: The Augmentation of Douglas Engelbart",
                "image_url": "https:\/\/c1.iggcdn.com\/indiegogo-media-prod-cld\/image\/upload\/c_fill%2Cf_auto%2Ch_630%2Cw_1200\/v1549218302\/ppojokd0ntj48kstkxax.jpg",
                "image_width": 476,
                "image_height": 250,
                "from_url": "https:\/\/www.indiegogo.com\/projects\/the-augmentation-of-douglas-engelbart?fbclid=IwAR0eDeCKSLG-3_TOfGSkbVdDzGHKavwq4Pyb-EMsbdZXdGoOlIyeI3DAIaA#\/",
                "image_bytes": 94591,
                "service_icon": "https:\/\/g2.iggcdn.com\/assets\/favicon\/apple-touch-icon-180x180-precomposed-7e9ecfae6058f5d3e159760ab31d9bed65a6b6ff88ea8fbe322530d226f44cb8.png",
                "id": 1,
                "original_url": "https:\/\/www.indiegogo.com\/projects\/the-augmentation-of-douglas-engelbart?fbclid=IwAR0eDeCKSLG-3_TOfGSkbVdDzGHKavwq4Pyb-EMsbdZXdGoOlIyeI3DAIaA#\/"
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5TCAFTD3",
                    "UAJ9DV971",
                    "UD3AK9JRF"
                ],
                "count": 3
            }
        ]
    },
    {
        "type": "message",
        "subtype": "thread_broadcast",
        "text": "Just had a great experience collaborating at work yesterday. I’m in Japan this week for a prototype sprint, paired with another engineer. His ML component took a few days to build, so we defined a protocol (over gRPC—actually pretty easy because his team had already been using protocols for collaboration, so we just recombined a few), then split up. I wrote a stub implementation in Go that I could use until his C++ service was ready. I kept telling him it’d work the first time, but he wouldn’t believe me… until he finished, I switched the address to point to his laptop instead of my in-memory stub, and it worked seamlessly!\n\nI keep the stub around for when his laptop is down or his code is broken because he’s iterating simultaneously with me.\n\nWe’ll probably move it all into the same computer for the demo, but maybe not.\n\nThis is easy collaboration!",
        "user": "UFEQUBNNT",
        "ts": "1556141350.183100",
        "thread_ts": "1548037741.399400",
        "root": {
            "client_msg_id": "fcba9786-01b4-49ef-b344-3899abeb803e",
            "type": "message",
            "text": "<@UCGAK10LS> I don't think so, but it's just because you're talking about the quality of the communication and I'm talking about the amount. I'm saying that when protocol boundaries match team boundaries, cross-team discussion is only ever needed when the protocol changes, whereas without protocol boundaries, the teams potentially step on each other's toes with every change.\n\nYou're right about maintainability, but today it's very easy technologically and organizationally to enforce a single programming language across the organization, whereas it's nearly impossible for people to collaborate in multiple languages at any level smaller than a server. That's a lever that we just can't pull, even in cases where it might make collaboration more efficient.\n\nA type of collaboration I see a lot is when my team needs another team's expertise. An RPC protocol can be written to satisfy almost any language's type system guarantees, so theoretically the only difference between calling a method written in the same language and one in a different language should be where the computer looks for the implementation. But when I ask a team of machine learning experts to write a GetRecommendedMovies() function for my web site, and their preferred ML library is TensorFlow, their implementation strategy varies _dramatically_ based on which language I want to call the function from. I don't think we necessarily want that collaboration overhead. Usually, we don't gain anything from it.\n\nAnd if in the course of writing GetRecommendedMovies(), they accidentally introduce a memory leak, does the user get a connection-lost error because the whole server goes down, or is the movie recommendation part of the page just empty because I handle the error on my side? Do I have to fix their bug to work on other parts of my page?\n\nAnd if I want to continue development with a working version of their code (not just a black hole that behaves as if the function never existed), do I have to root cause the bug to figure out which commits to revert, or can I just back out all of that team's changes (the ones on their side of the protocol boundary) from the past week? Can I do that without losing everyone else's changes from that same period?\n\nThis is the shape of my collaborative coding dream. :slightly_smiling_face:",
            "user": "UFEQUBNNT",
            "ts": "1548037741.399400",
            "team": "T5TCAFTA9",
            "edited": {
                "user": "UFEQUBNNT",
                "ts": "1548038099.000000"
            },
            "thread_ts": "1548037741.399400",
            "reply_count": 9,
            "reply_users_count": 4,
            "latest_reply": "1556432083.209300",
            "reply_users": [
                "UFEQUBNNT",
                "UCUSW7WVD",
                "U8A5MS6R1",
                "UEQ6M68H0"
            ],
            "subscribed": false
        },
        "client_msg_id": "0D54CB74-8F3C-479B-A246-6ECAC7E39F70"
    },
    {
        "client_msg_id": "785b950d-09a9-4cc5-80a2-f04dcdd48333",
        "type": "message",
        "text": "In my experience the experience is great when 2 or 3 people collaborate over short periods of time, but goes awry when we go overboard and try to use it over larger groups of people and over longer periods of time.",
        "user": "UCUSW7WVD",
        "ts": "1556141891.183500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548037741.399400",
        "parent_user_id": "UFEQUBNNT"
    }
]