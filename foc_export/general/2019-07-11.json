[
    {
        "client_msg_id": "d8062d23-8448-46b7-93d9-e22fbc5a682e",
        "type": "message",
        "text": "peep Hillel Wayne's blog posts (eg <https:\/\/www.hillelwayne.com\/post\/formally-specifying-uis\/>) and sketch.systems",
        "user": "UFQQ3P867",
        "ts": "1562829011.196800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "75bc4f5fbeed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/882734188373_75bc4f5fbeedc5a2213e_72.jpg",
            "first_name": "",
            "real_name": "Max Krieger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "photos482",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UFQQ3P867",
            "ts": "1562829086.000000"
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "UFMD4TQMD"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "afbd918d-6699-4dff-be79-eeb623f8bc88",
        "type": "message",
        "text": "but am interested in others' recs",
        "user": "UFQQ3P867",
        "ts": "1562829024.197000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "75bc4f5fbeed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/882734188373_75bc4f5fbeedc5a2213e_72.jpg",
            "first_name": "",
            "real_name": "Max Krieger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "photos482",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "type": "message",
        "text": "Anyone spent any time looking at TempleOS? There's a decent overview here: <http:\/\/www.codersnotes.com\/notes\/a-constructive-look-at-templeos\/>",
        "user": "UEDDR6L5Q",
        "ts": "1562838564.197400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge102afcfde7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0e102afcfde7b6fee8b2d4ca2ed87ba5.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Andrew Reece",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "azmreece",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562838564.197400",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1562882982.203200",
        "reply_users": [
            "UJ6LDMMN0",
            "ULD6Q9VL6",
            "UCUSW7WVD",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UJ6LDMMN0",
                "ts": "1562838874.197500"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1562838983.197700"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1562839232.197900"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1562839278.198100"
            },
            {
                "user": "ULD6Q9VL6",
                "ts": "1562839582.198600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1562861750.201700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1562882982.203200"
            }
        ],
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJ6LDMMN0",
                    "UKXLUEA59"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "4e899230-25ad-46ea-9bd9-f1517077cb62",
        "type": "message",
        "text": "Thanks for posting this article here! I've heard of TempleOS a long time ago, and lately I wanted to dig the subject a bit more. This article is perfect for that. I will carefully read it later!",
        "user": "UJ6LDMMN0",
        "ts": "1562838874.197500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "426cd5067da7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-26\/607834329346_426cd5067da7fc8c6933_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q"
    },
    {
        "client_msg_id": "d0df8af1-728f-4312-8336-b5fe2b4f8e1b",
        "type": "message",
        "text": "But I have read its beginning and I like a lot the point a view. I.e. stopping mocking because it is weird stuff and focus on the creativity of its author and what makes its creation interesting.",
        "user": "UJ6LDMMN0",
        "ts": "1562838983.197700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "426cd5067da7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-26\/607834329346_426cd5067da7fc8c6933_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1562839316.000000"
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q"
    },
    {
        "client_msg_id": "4744e87c-0fe2-441a-bd71-5999fba60421",
        "type": "message",
        "text": "I see TempleOS as a kind of \"outsider art\" (or \"art brut\" in french) in the field of programming! This kind of stuff can be very insightful of what human creativity is. And these weird piece of creativity have a very special beauty. :slightly_smiling_face:",
        "user": "UJ6LDMMN0",
        "ts": "1562839232.197900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "426cd5067da7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-26\/607834329346_426cd5067da7fc8c6933_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1562839286.000000"
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q",
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UDYGH7K8V",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "7c8f44d7-1f7d-4517-86c7-b2f1feeca8ae",
        "type": "message",
        "text": "I would love to here about more stuff like that! Anyone knows something similar?",
        "user": "UJ6LDMMN0",
        "ts": "1562839278.198100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "426cd5067da7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-26\/607834329346_426cd5067da7fc8c6933_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q"
    },
    {
        "client_msg_id": "6a9e68f4-0c80-450c-9379-dfab9f306a09",
        "type": "message",
        "text": "Talked to Terry years back when it was named LoseThos, was kind at first to have some interest into his OS, but it rapidly focused on God and things. To me it was a great evolution of a \"boot 'n code\" Commodore 64, but the lack of modernity (greater video resolution, networking, ...) and as he finished to close the source code (that was a C-flavored language) made things less interesting. I then turned to MonaOS or Visopsys.",
        "user": "ULD6Q9VL6",
        "ts": "1562839582.198600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbe480defce7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0be480defce7edd188aaf7fd255ed9e2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Kochise",
            "display_name": "Kochise",
            "team": "T5TCAFTA9",
            "name": "david.koch",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q"
    },
    {
        "client_msg_id": "9cb3b151-0610-459d-afc2-a29afc64e8a7",
        "type": "message",
        "text": "<http:\/\/www.wisdom.weizmann.ac.il\/~dharel\/SCANNED.PAPERS\/Statecharts.pdf>",
        "user": "UGWUJUZHT",
        "ts": "1562846226.199100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g222ae5c0173",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8222ae5c01730d4dba6a358e4d5f9031.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "914afa01-98d6-4416-a9f3-ca5d3ab44c94",
        "type": "message",
        "text": "Nice.\n\nI’ve been wondering – are state machines \/ state charts a category?\n\nThey seem perhaps good for modelling session type like ideas too? And generally, all sorts of concurrent behaviour.",
        "user": "UKT951SPR",
        "ts": "1562853911.199800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfcb418e17ca",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ffcb418e17cac2873d611c2b8d8d891c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Benjohn Barnes",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "benjohn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "9edf87ee-7ddc-4814-91ec-d8b6f0da3ae7",
        "type": "message",
        "text": "There's a whole community for that! <https:\/\/spectrum.chat\/statecharts\/general?tab=posts>",
        "user": "U5TCAFTD3",
        "ts": "1562854029.200000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Spectrum",
                "title": "Statecharts · General",
                "title_link": "https:\/\/spectrum.chat\/statecharts\/general?tab=posts",
                "text": "General Chatter",
                "fallback": "Spectrum: Statecharts · General",
                "thumb_url": "https:\/\/spectrum.imgix.net\/communities\/ea50e0e6-8dc8-4a2e-8b64-a4077dba0542\/Screenshot%202018-01-22%20at%2023.05.41.png.0.005510493317758769?w=256&h=256&dpr=2&auto=compress&expires=1562889600000&ixlib=js-1.3.0&s=093b5ae4d74a2879c5bc51cc1fab1523",
                "from_url": "https:\/\/spectrum.chat\/statecharts\/general?tab=posts",
                "thumb_width": 512,
                "thumb_height": 484,
                "service_icon": "https:\/\/spectrum.chat\/img\/apple-icon-57x57-precomposed.png",
                "id": 1,
                "original_url": "https:\/\/spectrum.chat\/statecharts\/general?tab=posts"
            }
        ],
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "6D32C4F2-5473-4929-A6BA-B4278A0B3D13",
        "type": "message",
        "text": "For clarification, I mean “category” in the mathematical sense, rather than “a subject \/ topic”! :-)",
        "user": "UKT951SPR",
        "ts": "1562857466.201500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfcb418e17ca",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ffcb418e17cac2873d611c2b8d8d891c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Benjohn Barnes",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "benjohn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "6f20d64a-414b-4cf2-b8be-99e79ef81845",
        "type": "message",
        "text": "&gt;There is no ahead-of-time linker, nor object files. The dynamic linker is exclusively responsible for binding symbols together at load time. The symbol table remains accessible at runtime, and can be used for other purposes. TempleOS has no environment variables - you just use regular variables.\n:bulb::astonished:",
        "user": "UCUSW7WVD",
        "ts": "1562861750.201700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1562861767.000000"
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q"
    },
    {
        "client_msg_id": "c5b02d72-63e8-4de5-8d75-d5cadb9f6e14",
        "type": "message",
        "text": "<@UHWC9PXBL> I had just watched a different talk of his prior to making my post :stuck_out_tongue: I'll look at this one too\n\n<@UFQQ3P867> That's where I first found out about them, actually.\n\n<@U5TCAFTD3> Neat. Thanks. I will seek indoctrination",
        "user": "UJTHWNH2T",
        "ts": "1562867063.202000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "3c730d49-3d76-4476-b729-b64551023855",
        "type": "message",
        "text": "<@UKT951SPR> Not entirely sure if it's a category but category-friendly people work on Petri Nets <https:\/\/johncarlosbaez.wordpress.com\/2018\/08\/15\/open-petri-nets-part-1\/> <https:\/\/blog.statebox.org\/behavioral-programming-with-petri-nets-%C3%A0-la-functional-way-smart-contracts-96d801cef8cc>",
        "user": "UFQQ3P867",
        "ts": "1562867526.202200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "75bc4f5fbeed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/882734188373_75bc4f5fbeedc5a2213e_72.jpg",
            "first_name": "",
            "real_name": "Max Krieger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "photos482",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Azimuth",
                "service_url": "http:\/\/johncarlosbaez.wordpress.com",
                "title": "Open Petri Nets (Part 1)",
                "title_link": "https:\/\/johncarlosbaez.wordpress.com\/2018\/08\/15\/open-petri-nets-part-1\/",
                "author_name": "John Baez",
                "author_link": "https:\/\/johncarlosbaez.wordpress.com\/author\/johncarlosbaez\/",
                "thumb_url": "https:\/\/i1.wp.com\/math.ucr.edu\/home\/baez\/networks\/petri_net_example_open.png?fit=200%2C150",
                "thumb_width": 200,
                "thumb_height": 50,
                "text": "Jade Master and I have just finished a paper on open Petri nets:\n&bull; John Baez and Jade Master, Open Petri nets.\n\n  Abstract.  The reachability semantics for Petri nets can be studied using open Petri nets. For us an &lsquo;open&rsquo; Petri net is one with certain places designated as inputs and outputs via a cospan of sets. We can compose open Petri nets by gluing the outputs of one to the inputs of another. Open Petri nets can be treated as morphisms of a category, which becomes symmetric monoidal under disjoint union. However, since the composite of open Petri nets is defined only up to isomorphism, it is better to treat them as morphisms of a symmetric monoidal double category  Various choices of semantics for open Petri nets can be described using symmetric monoidal double functors out of  Here we describe the reachability semantics, which assigns to each open Petri net the relation saying which markings of the outputs can be obtained from a given marking of the inputs via a sequence of transitions. We show this semantics gives a symmetric monoidal lax double functor from  to the double category of relations. A key step in the proof is to treat Petri nets as presentations of symmetric monoidal categories; for this we use the work of Meseguer, Montanari, Sassone and others.\n\nI&rsquo;m excited about this, especially because our friends at Statebox are planning to use open Petri nets in their software.   They&rsquo;ve recently come out with a paper too:\n&bull; Fabrizio Romano Genovese and Jelle Herold, Executions in (semi-)integer Petri nets are compact closed categories.\nPetri nets are widely used to model open systems in subjects ranging from computer science to chemistry.  There are various kinds of Petri net, and various ways to make them &lsquo;open&rsquo;, and my paper with Jade only handles the simplest.  But our techniques are flexible, so they can be generalized.\nWhat&rsquo;s an open Petri net?   For us, it&rsquo;s a thing like this:\n\n\nThe yellow circles are called &lsquo;places&rsquo; (or in chemistry, &lsquo;species&rsquo;).  The aqua rectangles are called &lsquo;transitions&rsquo; (or in chemistry, &lsquo;reactions&rsquo;).  There can in general be lots of places and lots of transitions.   The bold arrows from places to transitions and from transitions to places complete the structure of a Petri net.  There are also arbitrary functions from sets  and  into the set of places.   This makes our Petri net into an &lsquo;open&rsquo; Petri net.\nWe can think of open Petri nets as morphisms between finite sets.  There&rsquo;s a way to compose them!  Suppose we have an open Petri net  from  to  where now I&rsquo;ve given names to the points in these sets:\n\nWe write this as  for short, where the funky arrow reminds us this isn&rsquo;t a function between sets.  Given another open Petri net  for example this:\n\nthe first step in composing  and  is to put the pictures together:\n\nAt this point, if we ignore the sets  we have a new Petri net whose set of places is the disjoint union of those for  and \nThe second step is to identify a place of  with a place of  whenever both are images of the same point in .  We can then stop drawing everything involving  and get an open Petri net  which looks like this:\n\nFormalizing this simple construction leads us into a bit of higher category theory.  The process of taking the disjoint union of two sets of places and then quotienting by an equivalence relation is a pushout.  Pushouts are defined only up to canonical isomorphism: for example, the place labeled  in the last diagram above could equally well have been labeled  or  This is why to get a category, with composition strictly associative, we need to use isomorphism classes of open Petri nets as morphisms.   But there are advantages to avoiding this and working  with open Petri nets themselves.  Basically, it&rsquo;s better to work with things than mere isomorphism classes of things!  If we do this, we obtain not a category but a bicategory with open Petri nets as morphisms.\nHowever, this bicategory is equipped with more structure.   Besides composing open Petri nets, we can also &lsquo;tensor&rsquo; them via disjoint union: this describes Petri nets being run in parallel rather than in series.   The result is a symmetric monoidal bicategory. Unfortunately, the axioms for a symmetric monoidal bicategory are cumbersome to check directly.  Double categories turn out to be more convenient.\nDouble categories were introduced in the 1960s by Charles Ehresmann.  More recently they have found their way into applied mathematics.  They been used to study various things, including open dynamical systems:\n&bull;  Eugene Lerman and David Spivak, An algebra of open continuous time dynamical systems and networks.\nopen electrical circuits and chemical reaction networks:\n&bull; Kenny Courser, A bicategory of decorated cospans, Theory and Applications of Categories 32 (2017), 995&ndash;1027.\nopen discrete-time Markov chains:\n&bull; Florence Clerc, Harrison Humphrey and P. Panangaden, Bicategories of Markov processes, in Models, Algorithms, Logics and Tools, Lecture Notes in Computer Science 10460, Springer, Berlin, 2017, pp. 112&ndash;124.\nand coarse-graining for open continuous-time Markov chains:\n&bull; John Baez and Kenny Courser, Coarse-graining open Markov processes.  (Blog article here.)\nAs noted by Shulman, the easiest way to get a symmetric monoidal bicategory is often to first construct a symmetric monoidal double category:\n&bull; Mike Shulman, Constructing symmetric monoidal bicategories.\nThe theory of &lsquo;structured cospans&rsquo; gives a systematic way to build symmetric monoidal double categories&mdash;Kenny Courser and I are writing a paper on this&mdash;and Jade and I use this to construct the symmetric monoidal double category of open Petri nets.\nA 2-morphism in a double category can be drawn as a square like this:\n\nWe call  and  &lsquo;objects&rsquo;,  and  &lsquo;vertical 1-morphisms&rsquo;,  and  &lsquo;horizontal 1-cells&rsquo;, and  a &lsquo;2-morphism&rsquo;.   We can compose vertical 1-morphisms to get new vertical 1-morphisms and compose horizontal 1-cells to get new horizontal 1-cells.  We can compose the 2-morphisms in two ways: horizontally and vertically.  (This is just a quick sketch of the ideas, not the full definition.)\nIn our paper, Jade and I start by constructing a symmetric monoidal double category  with:\n&bull; sets  as objects,\n&bull; functions  as vertical 1-morphisms,\n&bull; open Petri nets  as horizontal 1-cells,\n&bull; morphisms between open Petri nets as 2-morphisms.\n(Since composition of horizontal 1-cells is associative only up to an invertible 2-morphism, this is technically a pseudo double category.)\nWhat are the morphisms between open Petri nets like?   A simple example may be help give a feel for this.   There is a morphism from this open Petri net:\n\nto this one:\n\nmapping both primed and unprimed symbols to unprimed ones.  This describes a process of &lsquo;simplifying&rsquo; an open Petri net.   There are also morphisms that include simple open Petri nets in more complicated ones, etc.\nThis is just the start.  Our real goal is to study the semantics of open Petri nets: that is, how they actually describe processes!  And for that, we need to think about the free symmetric monoidal category on a Petri net.  You can read more about those things in Part 2 and Part 3 of this series.\n&bull; Part 1: the double category of open Petri nets.\n&bull; Part 2: the reachability semantics for open Petri nets.\n&bull; Part 3: the free symmetric monoidal category on a Petri net.",
                "fallback": "Azimuth Link: Open Petri Nets (Part&nbsp;1)",
                "from_url": "https:\/\/johncarlosbaez.wordpress.com\/2018\/08\/15\/open-petri-nets-part-1\/",
                "service_icon": "https:\/\/s2.wp.com\/i\/webclip.png",
                "id": 1,
                "original_url": "https:\/\/johncarlosbaez.wordpress.com\/2018\/08\/15\/open-petri-nets-part-1\/"
            },
            {
                "service_name": "Medium",
                "title": "Behavioral Programming with Petri Nets à la Functional Way — Smart Contracts!",
                "title_link": "https:\/\/blog.statebox.org\/behavioral-programming-with-petri-nets-%C3%A0-la-functional-way-smart-contracts-96d801cef8cc",
                "text": "Hello everyone! As promised, this post continues the story about behavioral programming done with Petri nets. In the last post, we…",
                "fallback": "Medium: Behavioral Programming with Petri Nets à la Functional Way — Smart Contracts!",
                "image_url": "https:\/\/miro.medium.com\/max\/1200\/1*TgI-V1Yy538-5mEY-Hazig.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "6 min read",
                        "short": true
                    }
                ],
                "ts": 1550234376,
                "from_url": "https:\/\/blog.statebox.org\/behavioral-programming-with-petri-nets-%C3%A0-la-functional-way-smart-contracts-96d801cef8cc",
                "image_width": 375,
                "image_height": 250,
                "image_bytes": 83819,
                "service_icon": "https:\/\/cdn-images-1.medium.com\/fit\/c\/152\/152\/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 2,
                "original_url": "https:\/\/blog.statebox.org\/behavioral-programming-with-petri-nets-%C3%A0-la-functional-way-smart-contracts-96d801cef8cc"
            }
        ],
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "150c84d3-e236-44b2-a35a-611537714ed0",
        "type": "message",
        "text": "always! :smiley_cat:",
        "user": "UGS8TUVK6",
        "ts": "1562871021.202600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b2204b9c98e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-10\/691633887223_2b2204b9c98e11f0ad1f_72.jpg",
            "first_name": "Martin",
            "real_name": "Martin Kavalar",
            "display_name": "mk",
            "team": "T5TCAFTA9",
            "name": "martin",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562708105.177900",
        "parent_user_id": "UKJ75RMFT",
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "4c18d543-50dc-4e79-bbfa-73585471815c",
        "type": "message",
        "text": "I wanted to add, in particular, why I'm surprised I don't see people on here talking about this more often. It seems to me that statecharts are showing completely essential complexity. Make a statechart for a GUI -- can it be reduced whatsoever? They're also intuitive to read for even non-programmers",
        "user": "UJTHWNH2T",
        "ts": "1562878403.202800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "065e912a-58f7-43a8-901f-f8da83b4622f",
        "type": "message",
        "text": "Wouldn't it be ideal to make an app directly from a statechart? (xstate sorta does this?",
        "user": "UJTHWNH2T",
        "ts": "1562878457.203000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "7d2f0f64-994b-4c12-8ae9-371f59e7efb3",
        "type": "message",
        "text": "TempleOS has many wonderful simplifying concepts. A tragedy that really simple things like Oberon\/Lility and TempleOS get ignored so easily. Multics was as dream compared to Unix, yet it also was ignored.",
        "user": "UEQ6M68H0",
        "ts": "1562882982.203200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562838564.197400",
        "parent_user_id": "UEDDR6L5Q",
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UJFN50C00"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJFN50C00",
                    "UJUGB1XGD"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "5A0926B0-1B51-40DC-B8B7-D67DA34F3D23",
        "type": "message",
        "text": "<@UKT951SPR> Statecharts are hypergraphs with a single edge potentially leading on to multiple states. So its a generalization of a graph which I think can be partitioned to get a lattice of possible states.\n\n<@UJTHWNH2T> I have the same hunch too, I might report back in this early next year. Have a few systems to be built in this paradigm lined up. An open question I think is on how to do scheduling and other complex patterns on top of statecharts.",
        "user": "UDKTZSD6H",
        "ts": "1562884372.209600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T"
    },
    {
        "client_msg_id": "13851910-d4b6-4491-ba68-c6a0866762e2",
        "type": "message",
        "text": "Some future of coding projects with statecharts:\n\n<http:\/\/interstate.from.so\/>\n\n<http:\/\/web.media.mit.edu\/~jacobsj\/#db>",
        "user": "U5TCAFTD3",
        "ts": "1562887803.209900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Jennifer Jacobs",
                "title_link": "http:\/\/web.media.mit.edu\/~jacobsj\/#db",
                "text": "Researcher who examines ways to diversify participation and practice in computationally-supported creation by building new creative tools, software, and programming languages for creative expression.",
                "fallback": "Jennifer Jacobs",
                "from_url": "http:\/\/web.media.mit.edu\/~jacobsj\/#db",
                "service_name": "web.media.mit.edu",
                "id": 1,
                "original_url": "http:\/\/web.media.mit.edu\/~jacobsj\/#db"
            }
        ],
        "thread_ts": "1562800782.193800",
        "parent_user_id": "UJTHWNH2T",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H",
                    "UJTHWNH2T",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "f5e4859a-0502-4a1c-924a-ffcd9df37b0c",
        "type": "message",
        "text": "<@UGXH0HCSF> Not sure if you’re still around and connected to dynamicland, but I’m visiting the 24th of July and the 7th of Aug, so if you’re around and available, would love to have a quick meet and chat about it!",
        "user": "UDPV407CZ",
        "ts": "1562888797.210200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge26f4f6a649",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7e26f4f6a649fa977ba95c60f15fef2a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Niluka",
            "real_name": "Niluka Satharasinghe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "folcon",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552519997.313200",
        "parent_user_id": "UDPV407CZ"
    },
    {
        "client_msg_id": "e60ea490-fab1-4aef-9a6d-d089abdade21",
        "type": "message",
        "text": "I feel like concurrency introduces vast complexity and thus results in more errors, but I have no empirical data to support this. Does anyone have any go-to papers\/data on such a thing?",
        "user": "UJK8MKYAZ",
        "ts": "1562895704.212400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562895704.212400",
        "reply_count": 23,
        "reply_users_count": 7,
        "latest_reply": "1563729316.055000",
        "reply_users": [
            "UJK8MKYAZ",
            "ULD6Q9VL6",
            "UKT951SPR",
            "UBN9AFS0N",
            "UJTHWNH2T",
            "UHWC9PXBL",
            "UKQT95T1V"
        ],
        "replies": [
            {
                "user": "UJK8MKYAZ",
                "ts": "1562897487.214000"
            },
            {
                "user": "ULD6Q9VL6",
                "ts": "1562907728.214400"
            },
            {
                "user": "UKT951SPR",
                "ts": "1562913459.214600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562918375.215000"
            },
            {
                "user": "UKT951SPR",
                "ts": "1562918718.215200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562923836.215600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562923852.215800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562923868.216000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562923869.216200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562923970.216500"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562923982.216800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562924085.217000"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1562945215.218300"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1562945224.218600"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1562945246.218800"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1562945290.219000"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1562945423.219200"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1562949933.219700"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1562950022.219900"
            },
            {
                "user": "UJK8MKYAZ",
                "ts": "1562950027.220100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1562953287.220300"
            },
            {
                "user": "UKT951SPR",
                "ts": "1563179785.281000"
            },
            {
                "user": "UKQT95T1V",
                "ts": "1563729316.055000"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "516f3f77-9b5b-4049-b87f-46e7c3a27615",
        "type": "message",
        "text": "This paper has a lot of the data I was looking for: <https:\/\/jisajournal.springeropen.com\/articles\/10.1186\/s13174-017-0055-2>",
        "user": "UJK8MKYAZ",
        "ts": "1562897487.214000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Journal of Internet Services and Applications",
                "title": "Concurrency bugs in open source software: a case study",
                "title_link": "https:\/\/jisajournal.springeropen.com\/articles\/10.1186\/s13174-017-0055-2",
                "text": "Concurrent programming puts demands on software debugging and testing, as concurrent software may exhibit problems not present in sequential software, e.g., deadlocks and race conditions. In aiming to increase efficiency and effectiveness of debugging and bug-fixing for concurrent software, a deep understanding of concurrency bugs, their frequency and fixing-times would be helpful. Similarly, to design effective tools and techniques for testing and debugging concurrent software, understanding the differences between non-concurrency and concurrency bugs in real-word software would be useful. This paper presents an empirical study focusing on understanding the differences and similarities between concurrency bugs and other bugs, as well as the differences among various concurrency bug types in terms of their severity and their fixing time, and reproducibility. Our basis is a comprehensive analysis of bug reports covering several generations of five open source software projects. The analysis involves a total of 11860 bug reports from the last decade, including 351 reports related to concurrency bugs. We found that concurrency bugs are different from other bugs in terms of their fixing time and severity while they are similar in terms of reproducibility. Our findings shed light on concurrency bugs and could thereby influence future design and development of concurrent software, their debugging and testing, as well as related tools.",
                "fallback": "Journal of Internet Services and Applications: Concurrency bugs in open source software: a case study",
                "from_url": "https:\/\/jisajournal.springeropen.com\/articles\/10.1186\/s13174-017-0055-2",
                "thumb_url": "https:\/\/media.springernature.com\/w110\/springer-static\/cover\/journal\/13174.jpg",
                "thumb_width": 110,
                "thumb_height": 145,
                "id": 1,
                "original_url": "https:\/\/jisajournal.springeropen.com\/articles\/10.1186\/s13174-017-0055-2"
            }
        ],
        "thread_ts": "1562895704.212400",
        "parent_user_id": "UJK8MKYAZ"
    },
    {
        "client_msg_id": "633c60d6-5c75-40f8-8822-c3463ee96990",
        "type": "message",
        "text": "Depend on the programming language used. Look at how Erlang solves the problem and handle concurrency.",
        "user": "ULD6Q9VL6",
        "ts": "1562907728.214400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbe480defce7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0be480defce7edd188aaf7fd255ed9e2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Kochise",
            "display_name": "Kochise",
            "team": "T5TCAFTA9",
            "name": "david.koch",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562895704.212400",
        "parent_user_id": "UJK8MKYAZ"
    },
    {
        "client_msg_id": "f14d29eb-f337-4c23-9352-db40a9bccd3c",
        "type": "message",
        "text": "This looks like a great paper – thanks.\n\nI think we generally see concurrency through the lens of languages that have been designed to largely functionally transform inputs to outputs, and to manage any change in a sequential manner.\n\nConcurrency is also inherently a more complex domain.\n\nHowever, the vast majority of our problems with concurrency are not its essential complexity, but that we’re not approaching it in a principled way and using tools that are appropriate to work with it.\n\nProgress has been made with tools. Some of them tacked on to our existing languages (eg, queue based programming, reactive programming, actors, software transactional memory), some theoretical.\n\nMy personal view is that probably “the right way” to handle concurrency might be something like composable state charts. This feels like a sweet spot that would handle an enormous class of use cases in a really robust and clarifying way. Rather similar to the success of automata in language parsing. There’s work being done on petri nets that also looks very promising and would presumably handle a larger class of problems.",
        "user": "UKT951SPR",
        "ts": "1562913459.214600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfcb418e17ca",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ffcb418e17cac2873d611c2b8d8d891c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Benjohn Barnes",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "benjohn",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1562895704.212400",
        "parent_user_id": "UJK8MKYAZ",
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UFEQUBNNT",
                    "UKQT95T1V"
                ],
                "count": 2
            }
        ]
    }
]