[
    {
        "client_msg_id": "332d9161-5eed-4ee6-baac-ae5e84e71a2c",
        "type": "message",
        "text": "Am a huge fan of the data-as-nodes, functions-as-edges paradigm introduced by PANE (Joshua Horowitz). Forces you to work with the data and maintain its visibility and clarity at all times",
        "user": "UFQQ3P867",
        "ts": "1559376078.049400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "75bc4f5fbeed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/882734188373_75bc4f5fbeedc5a2213e_72.jpg",
            "first_name": "",
            "real_name": "Max Krieger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "photos482",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559280517.023400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "c60c69ca-f428-4053-8e3b-1c81ecf97cb6",
        "type": "message",
        "text": "There’s certainly a drop in information bandwidth, as you’re no longer adding lines and lines of code to the program. But how does that map to bandwidth of meaning \/ intent? I’d argue that visual input approximates intent much better than textual, so the drop in information bandwidth may be superficial.",
        "user": "UJVEPCVT6",
        "ts": "1559386297.050100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6022dfa9d683",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-16\/785829927155_6022dfa9d683a7413601_72.jpg",
            "first_name": "Dan",
            "real_name": "Dan Stocker",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dan346",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHZNB3HRP",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "6081304b-eeb2-428f-bc6f-62ae157c0ef3",
        "type": "message",
        "text": "It all boils down to \"tap vs stroke\" at the end of the day..",
        "user": "UE6EFEPTQ",
        "ts": "1559386803.050300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "b20f6d69-8567-45bf-90ad-8751b163d3f7",
        "type": "message",
        "text": "(Stroke is more natural than tap by a small margin)",
        "user": "UE6EFEPTQ",
        "ts": "1559386861.050500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "15031129-c0e4-4916-9f10-2ddba6b86f03",
        "type": "message",
        "text": "For the sake of argument, I’d grant that building a program visually is slower than using a text-based language. Most problems I’m usually facing in programming occur when I need to change something. I think laying out and trying different variations visually can be much faster and can lead to better results than going through the same process with textual code. (Maintaining and modifying a mental model.)\nThen there’s the question about which is more important: brain-to-computer or computer-to-brain bandwidth? Here I agree with <@UCUSW7WVD>. I think understanding quickly trumps writing quickly.\nAnd finally, as <@UE6EFEPTQ> pointed out, there’s no reason for keyboard not to have a role in visual programming. Either in navigating the code, or editing certain properties.",
        "user": "UJVEPCVT6",
        "ts": "1559387032.050700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6022dfa9d683",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-16\/785829927155_6022dfa9d683a7413601_72.jpg",
            "first_name": "Dan",
            "real_name": "Dan Stocker",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dan346",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "d92b4a2e-8b9a-4d22-acd5-e93a5fddba64",
        "type": "message",
        "text": "And text is actually both two dimensional and structured, so it's already visual",
        "user": "UE6EFEPTQ",
        "ts": "1559387051.050900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJUGB1XGD",
                    "UA14TGLTC",
                    "U8A5MS6R1"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "F2E5F9DF-D8E4-45E5-8DFC-3B3C892432CA",
        "type": "message",
        "text": "Off the top of my head:\n* Componentization: not allowing the developer to see the entire network, only a single level: the component in focus, and how it fits into its environment.\n* Free edge directions: input-left \/ output-right does a huge disservice to readability\n* Deterministic shapes: a component with given child components, connections and parameters should look the same. (visual hash)\n* Filtering that highlights relevant nodes by dependencies, function, etc\n* Slow motion, time machine\n* Forking and comparing changes: multiple variations of a change running concurrently (imagine 3 variants of a component laid out side-by-side)\n* Topography-based diffing for version control.\n* Test paths: selecting a path with test input (eg table) and output components (eg. chart), straightened out and annotated.\n* Edge bundles: connecting certain types of nodes may require multiple connections between them. These should be nameable and marked differently.",
        "user": "UJVEPCVT6",
        "ts": "1559388455.051800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6022dfa9d683",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-16\/785829927155_6022dfa9d683a7413601_72.jpg",
            "first_name": "Dan",
            "real_name": "Dan Stocker",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dan346",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559280517.023400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UDJ2TKB99"
                ],
                "count": 1
            }
        ]
    },
    {
        "client_msg_id": "fe811bad-a67b-4dc4-9d2d-ed78f9af5ac8",
        "type": "message",
        "text": "<@UJVEPCVT6> Fantastic ideas there.\n\nTopography-based diffing is something I have in mind, but for a different use case than version control — topographic find &amp; replace. I wonder what other dev features you could make based on that sort of topographic awareness.\n\nCan you describe \"Test paths\" in more detail?",
        "user": "UC2A2ARPT",
        "ts": "1559405327.053100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1559406618.000000"
        },
        "thread_ts": "1559280517.023400",
        "parent_user_id": "UC2A2ARPT"
    },
    {
        "client_msg_id": "2597fb37-5236-499b-a263-d1254dd62759",
        "type": "message",
        "text": "What’s a good gentle intro to FP?",
        "user": "UJK8MKYAZ",
        "ts": "1559410123.053600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "85cf0f59-af9b-4f61-a5f8-489a17a67482",
        "type": "message",
        "text": "Preferably one that doesn’t get into true FP with strong types and such, but focuses more on the rationale behind immutability\/referential transperancy.",
        "user": "UJK8MKYAZ",
        "ts": "1559410183.054700",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559410183.054700",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1560173491.263800",
        "reply_users": [
            "UDKTZSD6H",
            "UJBAJNFLK",
            "UC6997THT"
        ],
        "replies": [
            {
                "user": "UDKTZSD6H",
                "ts": "1559516839.083000"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1559566781.086800"
            },
            {
                "user": "UC6997THT",
                "ts": "1560173491.263800"
            }
        ],
        "subscribed": false
    },
    {
        "client_msg_id": "3f56acc9-c767-4d59-b23f-8f6c438ed40c",
        "type": "message",
        "text": "clojure books are good for that, I read joy of clojure, but elements of clojure sounds really good from some quotes I've read",
        "user": "UBN9AFS0N",
        "ts": "1559410599.055300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "aa5cbe83-b122-49e4-89f5-0c899d98254b",
        "type": "message",
        "text": "```The first chapter, Names, explains why names define the structure of our software, and how to judge whether a name is any good.\n\nThe second chapter, Idioms, provides specific, syntactic advice for writing Clojure which is clean and readable.\n\nThe third chapter, Indirection, looks at how code can be made simpler and more robust through separation.\n\nThe final chapter, Composition, explores how the constituent pieces of our code can be combined into an effective whole.```",
        "user": "UBN9AFS0N",
        "ts": "1559410636.055400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "f671efb9-a892-4add-a864-a4bf43724aee",
        "type": "message",
        "text": "I don't like how the author sets of a false choice. I don't think it has to be an either\/or proposition.\n\nI use a low-code platform as my daily driver. I need to get outside of it and write code but my \"scripting languages\" are SQL and Javascript, so pretty universal and easy to find other programmers.\n\nI also could, almost as easily, forsake the choice of javascript and SQL and write web services using whatever I want to.",
        "user": "UHZNB3HRP",
        "ts": "1559439334.055900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g1e605c7d8c8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/91e605c7d8c807d1a07fb13a73ff8e06.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Greg",
            "real_name": "Greg Jarmiolowski",
            "display_name": "Greg Jarmiolowski",
            "team": "T5TCAFTA9",
            "name": "greg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559296162.029700",
        "parent_user_id": "U5TCAFTD3",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70",
                    "UA14TGLTC",
                    "U5TCAFTD3"
                ],
                "count": 3
            }
        ]
    },
    {
        "client_msg_id": "c4533896-8b9b-4a99-9ea8-2b067633911d",
        "type": "message",
        "text": "\"lisp\/llvm\/pypy\/bootstrap of VPLs\" -- That's partly what I have in mind for the project I'm working on",
        "user": "UAVCC2X70",
        "ts": "1559442064.056400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559280517.023400",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UBN9AFS0N",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "client_msg_id": "378d08ee-9f4c-4a56-b721-e19761d0243e",
        "type": "message",
        "text": "Yes, Clojure is the way to go if you care about immutability and not one iota about types.  Else I recommend Haskell (certainly over an ML, sorry CMU), but I don't have Haskell text to recommend: I learned it from reading papers and source.",
        "user": "UA14TGLTC",
        "ts": "1559453254.059400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "bb7a0c7d-238c-457d-8603-f5387593e95b",
        "type": "message",
        "text": "Else there would never be an argument about indentation.  For programming, text does very well at the \"paragraph\" level, somewhat complicated expressions across a few lines, but for navigating a program, easy search seems to be its primary advantage.  I mean if I open up a 500 line file, I have little idea what the overall structure.  Honestly, node-edge graphs don't necessarily look much better.  Semantic zoom friends, semantic zoom!  These can be textual and often IDE have some sort of various summary views (going all the way back to the Smalltalk browser).  These are often to the side though rather than being spacial.",
        "user": "UA14TGLTC",
        "ts": "1559453804.060100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN"
    },
    {
        "client_msg_id": "c30005b2-9e3f-4974-ae75-ecdf7750ea1e",
        "type": "message",
        "text": "The Joy of Haskell peeps recently published this book - can’t say how good it is, but I’ve so far been pretty impressed with Julie Moronuki’s approach to teaching: <https:\/\/joyofhaskell.com\/posts\/2019-05-21-first-book.html>",
        "user": "UJUQESQ1Z",
        "ts": "1559454458.061300",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Finding Success",
                "title_link": "https:\/\/joyofhaskell.com\/posts\/2019-05-21-first-book.html",
                "text": "Finding Success (and Failure) in Haskell is our first book and is available in digital format now; print version coming soon!",
                "fallback": "Finding Success",
                "thumb_url": "https:\/\/joyofhaskell.com\/images\/twitter.png",
                "from_url": "https:\/\/joyofhaskell.com\/posts\/2019-05-21-first-book.html",
                "thumb_width": 800,
                "thumb_height": 800,
                "service_icon": "https:\/\/joyofhaskell.com\/images\/favicon.ico",
                "service_name": "joyofhaskell.com",
                "id": 1,
                "original_url": "https:\/\/joyofhaskell.com\/posts\/2019-05-21-first-book.html"
            }
        ]
    },
    {
        "client_msg_id": "27b52af1-205a-4b4d-8e0e-9f248fb670eb",
        "type": "message",
        "text": "&gt; Preferably one that doesn’t get into true FP with strong types and such, but focuses more on the rationale behind immutability\/referential transperancy.\n\nAhh ok, missed that bit.",
        "user": "UJUQESQ1Z",
        "ts": "1559454550.061800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52a48f76fc9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e52a48f76fc911d40711f788d74773a0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "Brendan Zabarauskas",
            "display_name": "Brendan Zabarauskas",
            "team": "T5TCAFTA9",
            "name": "bjzaba",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "8ad3695d-e183-4122-bc7d-d6428962f868",
        "type": "message",
        "text": "I've been using semantic zoom for some time with traces generated by my programs: <https:\/\/git.sr.ht\/~akkartik\/basic-whitebox-test> (bottom section, but it may be helpful to read from the top). It takes only a few lines of code, and it works well with text. Add the ability to click from lines in the trace to the lines of code that generate them, and they give you a scalable way to navigate programs.",
        "user": "UCUSW7WVD",
        "ts": "1559454752.061900",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559251979.011000",
        "parent_user_id": "UJKC8B0QN",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    }
]