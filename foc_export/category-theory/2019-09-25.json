[
    {
        "client_msg_id": "ffa609c6-9090-4924-af87-677f3c258aaa",
        "type": "message",
        "text": "Hello friends,\n\nMy father was having some difficulty with Exercise 1.66 of Seven Sketches.  Thought you might get something out of my reply.\n\n&gt;&gt; Exercise 1.66. Let (P, ≤) be a preorder, and recall the notion of opposite preorder from Example 1.58.\n\nLet's do this.  I'm under the weather today, so some easy proofs are just the thing.  We open up all the definitions, and the proofs fall out. Exercise 1.66 is really great, a Monument Valley of Mathematics.  The concepts are deep.  The proofs are simple.  (I have adjusted notation in your quoted bits.)\n\nStart with the basics.  The preorder (P, ≤) is a set P and relation ≤ that is\n\t\n\treflexive: p ≤ p for all p ∈ P, and\n\ttransitive: if p ≤ q and q ≤ r then p ≤ r for p, q, r ∈ P.\n\nThe opposite preorder op(P) := (P, ≥) flips the order of arguments so p ≥ q if q ≤ p. — Isn't ≥ the most obvious symbol?\n\nNotice that the ≤ of (P, ≤) is implicit in op(P).  Math texts like their implicitness.  There *is* a regularity to it; however, it can be disorienting if you aren't following along perfectly.  The alternative explicitness would likely overwhelm with details.\n\n&gt;&gt; 1. Show that the set ↑(p) := {p' ∈ P | p ≤ p'} is an upper set, for any p ∈ P.\n\nSo ↑(p) is the set of all things bigger than p.  (Non-strictly of course because saying \"at least as big as\" sounds terrible.)\n\nWhat's an upper set?\n\n\tFor a preorder (P, ≤) an upper set in P is a subset U of P such that if p ∈ U and p ≤ q, then q ∈ U.\n\nIn other words, an upper set is part of the top of P.  So (1) is trivial.  ↑(p) is exactly the part of the top of P with p at the bottom and nothing else hanging on the sides.  Let's unwind the definitions to do this formally.\n\nConsider q ∈ ↑(p).  This means p ≤ q.  Take r where q ≤ r.  By transitivity p ≤ r.  This means r ∈ ↑(p).\n\nThis sort of rhythm makes a logician happy.  What makes a mathematician happy?  Considering the converse.  Is every upper set ↑(p) for some p?\n\nNo!  We only need two elements {a, b} for a counterexample where a and b are incomparable – neither a ≤ b nor b ≤ a.  Generalize?  Whenever p and q are incomparable, ↑(p) ∪ ↑(q) will be an upper set, but there won't be an r such that ↑(r) = ↑(p) ∪ ↑(q).\n\nMaybe we could extend the definition of ↑ to sets.  We would want ↑({p, q}) = ↑(p) ∪ ↑(q).  So for any set S, let ↑(S) := {p ∈ P | s ≤ p for some s ∈ S}.  This gives us a neat little way to characterize upper sets.  U is an upper set if and only if ↑(U) = U.  Nice, natural.  An upper set is one closed under ↑.\n\nAnother path of inquiry... given p and q, could there sometimes be a special, best r, such that both p, q ∈ ↑(r)?  What qualities would this best r have?  Well if p ∈ ↑(q), then r should be equivalent to q.  Moreover for some s if both p, q ∈ ↑(s), then s ∈ ↑(r).  Turns our there's a name for this kind of r, it's the meet of {p, q}.  So you should read Section 1.3.\n\nOne more idea... What happens when we take a totally ordered set, one in which every two elements are comparable.  Then is every upper set ↑(p) for some p?\n\nNo!  Consider (ℕ, ≥).  All of ℕ is certainly an upper set, but ↑(n) never catches all of ℕ not for any n ∈ ℕ.  How about we extend ℕ with this limit point ω &lt;https:\/\/en.wikipedia.org\/wiki\/Ordinal_number&gt;!  Or try this: start with the rational numbers, fill them in somehow &lt;https:\/\/en.wikipedia.org\/wiki\/Dedekind_cut&gt;.  Generalizing to preorders, we eventually discover Galois connections &lt;https:\/\/ncatlab.org\/nlab\/show\/MacNeille+completion&gt;.  Read Section 1.4.\n\nI told you this book knows what it's doing.",
        "user": "UA14TGLTC",
        "ts": "1569458880.002000",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "dbd19500-55b2-41ec-954b-5ac8c024903c",
        "type": "message",
        "text": "&gt;&gt; 2. Show that this construction defines a monotone map ↑: op(P) → U(P).\n\nMore definition unwrapping.  U(P) is the set of upper sets in P ordered by set inclusion ⊆.  For ↑ to be a monotone map, ↑ needs to firstly take every element of P to an upper set in P – we showed that in part (1) – and secondly if q ≥ p then ↑(q) ⊆↑(p).  Let's prove it.\n\nTake q ≥ p.  This means p ≤ q.  Consider r ∈ ↑(q).  This means q ≤ r.  By transitivity p ≤ r. This means r ∈ ↑(p).  And so ↑(q) ⊆↑(p).\n\nThe logic rhymes with part (1).",
        "user": "UA14TGLTC",
        "ts": "1569458883.002200",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "499bfc2c-7bab-4683-aa3a-3d6153c0aaf2",
        "type": "message",
        "text": "&gt; 3. Show that p ≤ q in P if and only if ↑(q) ⊆ ↑(p).\n\nPart (2) is the forward direction.  For the reverse, suppose ↑(q) ⊆ ↑(p).  By reflexivity q ≤ q.  This means q ∈ ↑(q).  So q ∈ ↑(p).  This means p ≤ q.\n\nWhat I like best about this is that there is nothing tricky.  We also learn that a monotone map existing corresponds to a kind conditional \"if ... then ...\" proposition.",
        "user": "UA14TGLTC",
        "ts": "1569458896.002400",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "8dd16fe4-3d62-4c4f-ac27-7d39b68d956b",
        "type": "message",
        "text": "&gt; 4. Draw a picture of the map ↑ in the case where P is the preorder (b ≥ a ≤ c) from Example 1.56.\n\nThey mean Exercise 1.57.\n\n\t↑(b) = {b}\n\t↑(a) = {b, a, c}\n\t↑(c) = {c}\n\nNow a diagram of the two orders:",
        "user": "UA14TGLTC",
        "ts": "1569458906.002600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "type": "message",
        "text": "Pre Yoneda",
        "files": [
            {
                "id": "FNK7KEXJM",
                "created": 1569458944,
                "timestamp": 1569458944,
                "name": "it-is-the-same.png",
                "title": "it-is-the-same.png",
                "mimetype": "image\/png",
                "filetype": "png",
                "pretty_type": "PNG",
                "user": "UA14TGLTC",
                "editable": false,
                "size": 1036162,
                "mode": "hosted",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-FNK7KEXJM\/it-is-the-same.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-FNK7KEXJM\/download\/it-is-the-same.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_64": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_64.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_80": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_80.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_360": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_360.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_360_w": 360,
                "thumb_360_h": 143,
                "thumb_480": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_480.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_480_w": 480,
                "thumb_480_h": 191,
                "thumb_160": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_160.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_720": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_720.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_720_w": 720,
                "thumb_720_h": 286,
                "thumb_800": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_800.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_800_w": 800,
                "thumb_800_h": 318,
                "thumb_960": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_960.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_960_w": 960,
                "thumb_960_h": 382,
                "thumb_1024": "https:\/\/files.slack.com\/files-tmb\/T5TCAFTA9-FNK7KEXJM-fa813015a9\/it-is-the-same_1024.png?t=xoxe-197418537349-1220335257046-1227067770482-88f226025a2db8e34ac513e918d80320",
                "thumb_1024_w": 1024,
                "thumb_1024_h": 407,
                "image_exif_rotation": 1,
                "original_w": 1454,
                "original_h": 578,
                "permalink": "https:\/\/futureofcoding.slack.com\/files\/UA14TGLTC\/FNK7KEXJM\/it-is-the-same.png",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-FNK7KEXJM-8ce16ca62f",
                "is_starred": false,
                "has_rich_preview": false
            }
        ],
        "upload": true,
        "user": "UA14TGLTC",
        "display_as_bot": false,
        "ts": "1569458947.002700",
        "client_msg_id": "d15cd2c1-64b5-476f-9bf8-9cacfc120ca6"
    },
    {
        "client_msg_id": "f1477243-8b38-4c40-9e20-0c281541634d",
        "type": "message",
        "text": "Look!  They have the same shape!",
        "user": "UA14TGLTC",
        "ts": "1569458951.003100",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "4c0487b9-1c51-4954-91e0-ac92229d08a1",
        "type": "message",
        "text": "&gt; This is known as the Yoneda lemma for preorders. The if and only if condition proved in part 3 implies that, up to equivalence, to know an element is the same as knowing its upper set—that is, knowing its web of relationships with the other elements of the preorder.\n\nIt's all about formalizing the \"web of relationships.\"  The ↑ summarizes the relationship of an element to the others, and ⊆ gives you the web so that you can recover the element from the summaries.\n\n&gt; The general Yoneda lemma is a powerful tool in category theory, and a fascinating philosophical idea besides.\n\nIt's a bit like the Database Reconstruction Theorem &lt;https:\/\/www.youtube.com\/watch?v=pT19VwBAqKA&gt;: if you know all the statistics, you can recover the underlying data.\n\n&gt; In the directions for reading the book they say you skip the ends of the chapters and still be able to gain something from the next chapter but I'll go back and work on those sections you recommend.\n\nDo.  I really think their use of preorders for the first chapter was inspired.",
        "user": "UA14TGLTC",
        "ts": "1569458974.003500",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "ca9bcb46-fef0-4acf-b6fd-7ae654c3cdeb",
        "type": "message",
        "text": "That's it!  Enjoy.",
        "user": "UA14TGLTC",
        "ts": "1569459006.003800",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    },
    {
        "client_msg_id": "3d9b8c48-9233-4ba2-8565-77235b0c5899",
        "type": "message",
        "text": "(Oops, I forgot the {b, c} in U(b ≥ a ≤ c).)",
        "user": "UA14TGLTC",
        "ts": "1569481110.004600",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        }
    }
]